<Window x:Class="SportBetting.WPF.Prism.ModalWindows.Views.TermsAndConditionsWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:WpfHelper="clr-namespace:SportBetting.WPF.Prism.WpfHelper;assembly=SportBetting.WPF.Prism.Shared"
                  xmlns:converters="clr-namespace:SportBetting.WPF.Prism.Shared.Converters;assembly=SportBetting.WPF.Prism.Shared"
                  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                  xmlns:l="clr-namespace:TranslationByMarkupExtension;assembly=TranslationByMarkupExtension"
                  xmlns:shared="clr-namespace:SportBetting.WPF.Prism.Shared;assembly=SportBetting.WPF.Prism.Shared"
                  xmlns:modalWindows="clr-namespace:SportBetting.WPF.Prism.ModalWindows"
                  xmlns:prism="clr-namespace:SportBetting.WPF.Prism;assembly=SportBetting.WPF.Prism.Shared"
        xmlns:converters2="clr-namespace:SportBetting.WPF.Prism.Converters;assembly=SportBetting.WPF.Prism.Shared"
        xmlns:baseObjects="clr-namespace:BaseObjects;assembly=BaseObjects"
        x:Name="TermsAndConditions"
                  Title="TermsAndConditions"
                  SizeToContent="Manual"
                  SnapsToDevicePixels="True"
                  WindowStartupLocation="CenterOwner"
                  WindowState="Maximized"
                  WindowStyle="None">
    <i:Interaction.Behaviors>
        <baseObjects:EventToCommandBehavior Command="{Binding MouseDownCommand,
                                                              Mode=TwoWay}"
                                            Event="PreviewMouseDown"
                                            PassArguments="True" />
    </i:Interaction.Behaviors>
    <!--  Resources  -->
    <Window.Resources>
        <shared:BooleanToVisibilityCollapsedConverter x:Key="myBooleanToVisibilityConverter" />
        <converters2:MultiBooleanORToVisibilityConverter x:Key="myMultiBooleanToVisibilityConverter" />
        <prism:InverseBooleanToVisibilityConverter x:Key="bInverseBooleanToVisibilityConverter" />
        <Style x:Key="localButton" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="10,0,10,0" />
            <Setter Property="Margin" Value="-1,0,0,0" />
            <Setter Property="Height" Value="68" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <DockPanel x:Name="dpnlContent"
                               Width="{TemplateBinding Width}"
                               LastChildFill="True">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonCenter.png}" />
                            </DockPanel.Background>
                            <DockPanel x:Name="dpnlLeft"
                                   Width="3"
                                   DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonLeft.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel x:Name="dpnlRight"
                                   Width="3"
                                   DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonRight.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonDownRight.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonDownRight.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonCenterOrange.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonDownOrangeLeft.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonDownOrangeRight.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="toggleButton" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#FFE4E4E4" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontFamily" Value="HelveticaNeue" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <StackPanel Width="230"
                                    Margin="10,0,0,0"
                                    Height="30"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    >
                            <ContentPresenter 
                                Width="230"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="RadioButton.IsChecked" Value="true">
                                <Setter Property="Foreground" Value="#FFFF4D00" />
                            </Trigger>
                            <Trigger Property="RadioButton.IsChecked" Value="False">
                                <Setter Property="Foreground" Value="#FFE4E4E4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.Background>
        <ImageBrush AlignmentX="Left"
                    AlignmentY="Top"
                    ImageSource="{converters:ResolveImagePath Path=BackgroundTileNotTransparent.png}"
                    Stretch="None"
                    TileMode="Tile"
                    Viewport="0,0,3,3"
                    ViewportUnits="Absolute" />
    </Window.Background>

    <DockPanel Margin="0,5" LastChildFill="True">

        <Grid Grid.Row="1"
              DockPanel.Dock="Top"
              Focusable="False"
              Visibility="{Binding ElementName=TermsAndConditionsScroller,
                                   Path=ComputedVerticalScrollBarVisibility}">
            <Grid.Background>
                <ImageBrush ImageSource="{converters:ResolveImagePath Path=BreadcrumbsCenter.png}" />
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" LastChildFill="False">
                <Image Width="4"
                           Height="60"
                           Margin="-1,0,0,0"
                           DockPanel.Dock="Left"
                           Source="{converters:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                <Image Width="4"
                           Height="60"
                           Margin="-1,0,0,0"
                           DockPanel.Dock="Right"
                           Source="{converters:ResolveImagePath Path=BreadcrumbsRight.png}" />
                <DockPanel Dock="Left">
                    <TextBlock
                        Style="{StaticResource normalText}"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_TERMS_AND_CONDITIONS_HEADER}}"
                        />
                </DockPanel>
                <DockPanel Dock="Right">
                    <Image 
                        Width="48" 
                        Height="48" 
                        Source="{converters:ResolveImagePath Path=close.png}" 
                        Margin="0,0,10,0"
                        >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseUp">
                                <i:InvokeCommandAction Command="{Binding CloseCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                </DockPanel>
            </DockPanel>
        </Grid>

        <!--  buttons for scrolling  -->
        <Grid Grid.Row="1"
              Margin="0,0,0,0"
              DockPanel.Dock="Bottom"
              Focusable="False"
              Visibility="{Binding ElementName=TermsAndConditionsScroller,
                                   Path=ComputedVerticalScrollBarVisibility}">
            <Grid.Background>
                <ImageBrush ImageSource="{converters:ResolveImagePath Path=BreadcrumbsCenter.png}" />
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Column="0" LastChildFill="False">
                <Button Width="140"
                        Height="60"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Style="{StaticResource navigationButton}"
                        WpfHelper:ButtonBehaviour.PreviewMouseDownCommand="{Binding ScrollDownStart}"
                        WpfHelper:ButtonBehaviour.PreviewMouseUpCommand="{Binding ScrollDownStop}">
                    <Image Width="40"
                                   Height="40"
                                   Margin="5,0,0,0"
                                   DockPanel.Dock="Right"
                                   Source="{converters:ResolveImagePath Path=ArrowDown.png}" />
                </Button>
                <Image Width="4"
                           Height="60"
                           Margin="-1,0,0,0"
                           DockPanel.Dock="Left"
                           Source="{converters:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                <Image Width="4"
                           Height="60"
                           Margin="-1,0,0,0"
                           DockPanel.Dock="Right"
                           Source="{converters:ResolveImagePath Path=BreadcrumbsRight.png}" />
            </DockPanel>

            <DockPanel Grid.Column="1" LastChildFill="False">
                <Button Width="140"
                        Height="60"
                        DockPanel.Dock="Left"
                        Focusable="False"
                        Style="{StaticResource navigationButton}"
                        WpfHelper:ButtonBehaviour.PreviewMouseDownCommand="{Binding ScrollUpStart}"
                        WpfHelper:ButtonBehaviour.PreviewMouseUpCommand="{Binding ScrollUpStop}">
                    <Image Width="40"
                                   Height="40"
                                   Margin="5,0,0,0"
                                   DockPanel.Dock="Right"
                                   Source="{converters:ResolveImagePath Path=ArrowUp.png}" />
                </Button>
                <Image Width="4"
                           Height="60"
                           Margin="-1,0,0,0"
                           DockPanel.Dock="Left"
                           Source="{converters:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                <Image Width="4"
                           Height="60"
                           Margin="-1,0,0,0"
                           DockPanel.Dock="Right"
                           Source="{converters:ResolveImagePath Path=BreadcrumbsRight.png}" />
                <DockPanel Dock="Right">
                    <Image 
                        Width="48" 
                        Height="48" 
                        Source="{converters:ResolveImagePath Path=close.png}" 
                        Margin="0,0,10,0"
                        >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseUp">
                                <i:InvokeCommandAction Command="{Binding CloseCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                </DockPanel>
            </DockPanel>
        </Grid>


        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border BorderBrush="Black" BorderThickness="0,0,5,0" CornerRadius="0">
                <StackPanel
                Grid.Column="0"
                Grid.Row="0"
                Orientation="Vertical"
                Margin="0"
                >
                    <StackPanel.Background>
                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=header_bg.png}" />
                    </StackPanel.Background>
                    <ItemsControl ItemsSource="{Binding LeftButtons}" Margin="0,15,0,0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <RadioButton x:Name="TCButton"
                                             Grid.Row="0"
                                             Grid.Column="0"
                                             Width="230"
                                             GroupName="leftMainButtons"
                                             Style="{StaticResource localButton}"
                                             HorizontalAlignment="Center"
                                             Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type Grid}}, Path=DataContext.MenuClick}"
                                             CommandParameter="{Binding}"
                                             IsChecked="{Binding Selected}"
                                             IsEnabled="{Binding Enabled}"
                                    >

                                        <TextBlock FontFamily="HelveticaNeue-Bold"
                                       FontSize="22"
                                       FontWeight="Bold"
                                       Foreground="#FFEFEFEF"
                                       LineHeight="22"
                                       LineStackingStrategy="BlockLineHeight"
                                       Text="{Binding Text}"
                                       TextAlignment="Left"
                                       TextWrapping="Wrap" />
                                    </RadioButton>
                                    <!--<TextBlock Height="20" Text=" " Background="Transparent"/>-->

                                    <ItemsControl ItemsSource="{Binding Children}"
                                        Grid.Row="1"
                                        Grid.Column="0">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <RadioButton 
                                                Style="{StaticResource toggleButton}"
                                                Width="230"
                                                Margin="0,10,0,10"
                                                Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}},
                                                Path=DataContext.Selected, Converter={StaticResource myBooleanToVisibilityConverter}}"
                                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type Grid}}, Path=DataContext.MenuClick}"
                                                CommandParameter="{Binding}"
                                                Content="{Binding PublicText}"
                                                IsChecked="{Binding Selected}"
                                                >

                                                </RadioButton>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
            <DockPanel 
                Margin="10,15,0,0"
                Grid.Column="1"
                Grid.Row="0">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <Grid>
                        <RadioButton
                        IsEnabled="{Binding ButtonGeneralEnabled}"
                        IsChecked="{Binding ButtonGeneralSelected}"
                        Width="180"
                        Style="{StaticResource localButton}"
                        GroupName="globalButtons"
                        Command="{Binding SwitchCategoryCommand}"
                        CommandParameter="General">
                            <TextBlock Style="{StaticResource normalText}" Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_PRINTER_GENERAL}}" />
                        </RadioButton>
                        <Grid Visibility="{Binding ButtonGeneralEnabled, Converter={StaticResource bInverseBooleanToVisibilityConverter}}">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters:ResolveImagePath Path=SmallDisabled_row.png}" />
                            </Grid.Background>
                        </Grid>
                    </Grid>
                    <TextBlock Width="10" Background="Transparent"/>
                    <Grid>
                        <RadioButton
                            Visibility="{Binding Path=StationRepository.IsPrematchEnabled, Converter={StaticResource myBooleanToVisibilityConverter}}"
                            IsChecked="{Binding ButtonPrematchSelected}"
                            IsEnabled="{Binding ButtonPrematchEnabled}"
                            Width="180"
                            Style="{StaticResource localButton}"
                            GroupName="globalButtons"
                            Command="{Binding SwitchCategoryCommand}"
                            CommandParameter="Prematch">
                            <TextBlock Style="{StaticResource normalText}" Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_PRINTER_PREMATCH}}" />
                        </RadioButton>
                        <Grid Visibility="{Binding ButtonPrematchEnabled, Converter={StaticResource bInverseBooleanToVisibilityConverter}}">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters:ResolveImagePath Path=SmallDisabled_row.png}" />
                            </Grid.Background>
                        </Grid>
                    </Grid>
                    <TextBlock Width="10" Background="Transparent"/>
                    <Grid>
                        <RadioButton
                            Visibility="{Binding Path=StationRepository.IsLiveMatchEnabled, Converter={StaticResource myBooleanToVisibilityConverter}}"
                            IsEnabled="{Binding ButtonLiveEnabled}"
                            IsChecked="{Binding ButtonLiveSelected}"
                            Width="180"
                            Style="{StaticResource localButton}"
                            GroupName="globalButtons"
                            Command="{Binding SwitchCategoryCommand}"
                            CommandParameter="Live">
                            <TextBlock Style="{StaticResource normalText}" Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_PRINTER_LIVE}}" />
                        </RadioButton>
                        <Grid Visibility="{Binding ButtonLiveEnabled, Converter={StaticResource bInverseBooleanToVisibilityConverter}}">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters:ResolveImagePath Path=SmallDisabled_row.png}" />
                            </Grid.Background>
                        </Grid>
                    </Grid>
                    <TextBlock Width="10" Background="Transparent"/>
                    <Grid>
                        <RadioButton
                            IsEnabled="{Binding ButtonVirtualEnabled}"
                            IsChecked="{Binding ButtonVirtualSelected}"
                            Width="180"
                            Style="{StaticResource localButton}"
                            GroupName="globalButtons"
                            Command="{Binding SwitchCategoryCommand}"
                            CommandParameter="Virtual">
                            <RadioButton.Visibility>
                                <MultiBinding Converter="{StaticResource myMultiBooleanToVisibilityConverter}">
                                    <Binding Path="StationRepository.AllowVfl" />
                                    <Binding Path="StationRepository.AllowVhc" />
                                </MultiBinding>
                            </RadioButton.Visibility>
                            <TextBlock Style="{StaticResource normalText}" Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_PRINTER_VIRTUAL}}" />

                        </RadioButton>
                        <Grid Visibility="{Binding ButtonVirtualEnabled, Converter={StaticResource bInverseBooleanToVisibilityConverter}}">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters:ResolveImagePath Path=SmallDisabled_row.png}" />
                            </Grid.Background>
                        </Grid>
                    </Grid>
                </StackPanel>
                <FlowDocumentScrollViewer x:Name="flowScroller" 
                                      IsSelectionEnabled="False"
                                      Margin="0,10"
                                      VerticalAlignment="Top" 
                                      DockPanel.Dock="Top"
                                      xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"
                                      VerticalScrollBarVisibility="Visible"
                                      HorizontalScrollBarVisibility="Disabled"
                                      HorizontalContentAlignment="Stretch"
                                      HorizontalAlignment="Stretch" Width="NaN"
                                  >
                    <FlowDocument 
                    PageWidth="Auto"
                    ColumnWidth="Auto"
                    IsOptimalParagraphEnabled="True" 
                    modalWindows:TCUtility.BindableBlocks="{Binding CurrentBlock}" />
                </FlowDocumentScrollViewer>
            </DockPanel>
        </Grid>

    </DockPanel>

</Window>
