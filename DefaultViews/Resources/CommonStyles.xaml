<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:controls="clr-namespace:SportBetting.WPF.Prism.Shared.Controls;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:converters2="clr-namespace:SportBetting.WPF.Prism.Shared.Converters;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:shared="clr-namespace:SportBetting.WPF.Prism.Shared;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:viewModels="clr-namespace:SportRadar.DAL.ViewObjects;assembly=DAL">
    <shared:ImagePathConverter x:Key="ImagePathConverter" />
    <shared:BiggerThanToVisibilityCollapsedConverter x:Key="BiggerThanToVisibilityCollapsedConverter" />

    <SolidColorBrush
        x:Key="OverlayBackground"
        Opacity="0.30"
        Color="White" />

    <!--  displays validation  -->
    <Style
        x:Key="ValidationTextBoxStyle"
        BasedOn="{x:Null}"
        TargetType="{x:Type TextBox}">

        <!--<Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true" Visibility="{Binding Count, Converter={StaticResource BiggerThanToVisibilityCollapsedConverter}, ConverterParameter=0}">
                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                        <Image Width="5"
                               Height="50"
                               Margin="-5,0,0,0"
                               Source="{converters2:ResolveImagePath Path=ValidationError.png}" />
                        <TextBlock Width="80"
                                   Margin="8,0,0,0"
                                   VerticalAlignment="Center"
                                   AutomationProperties.AutomationId="ErrorMessage"
                                   DockPanel.Dock="Right"
                                   FontSize="13"
                                   Foreground="red"
                                   Text="{Binding [0].ErrorContent}"
                                   TextWrapping="Wrap" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->


        <Style.Triggers>

            <!--  empty  -->
            <!--<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="true">
                                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                                <Image Width="5"
                                       Height="50"
                                       Margin="-5,0,0,0"
                                       Source="{converters2:ResolveImagePath Path=ValidationWarning.png}" />

                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>-->

        </Style.Triggers>
    </Style>

    <Style
        x:Key="ValidationTextBoxStyleLabelOnly"
        BasedOn="{x:Null}"
        TargetType="{x:Type TextBox}">

        <!--<Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true" Visibility="{Binding Count, Converter={StaticResource BiggerThanToVisibilityCollapsedConverter}, ConverterParameter=0}">
                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                        <Image
                            Width="5"
                            Height="50"
                            Margin="-5,0,0,0"
                            Source="{converters2:ResolveImagePath Path=ValidationError.png}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->


        <Style.Triggers>

            <!--  empty  -->
            <!--<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="true">
                                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                                <Image
                                    Width="5"
                                    Height="50"
                                    Margin="-5,0,0,0"
                                    Source="{converters2:ResolveImagePath Path=ValidationWarning.png}" />

                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>-->

        </Style.Triggers>
    </Style>

    <Style
        x:Key="ValidationTextBlockStyle"
        BasedOn="{x:Null}"
        TargetType="{x:Type TextBlock}">
        <!--<Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true" Visibility="{Binding Count, Converter={StaticResource BiggerThanToVisibilityCollapsedConverter}, ConverterParameter=0}">
                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                        <Image Width="5"
                               Height="50"
                               Margin="-5,0,0,0"
                               Source="{converters2:ResolveImagePath Path=ValidationError.png}" />
                        <TextBlock Width="80"
                                   Margin="8,0,0,0"
                                   VerticalAlignment="Center"
                                   AutomationProperties.AutomationId="ErrorMessage"
                                   DockPanel.Dock="Right"
                                   FontSize="13"
                                   Foreground="red"
                                   Text="{Binding [0].ErrorContent}"
                                   TextWrapping="Wrap" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->

        <Style.Triggers>


            <!--  empty  -->
            <!--<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="true">
                                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                                <Image Width="5"
                                       Height="60"
                                       Margin="-5,0,0,0"
                                       Source="{converters2:ResolveImagePath Path=ValidationWarning.png}" />
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>-->

        </Style.Triggers>
    </Style>

    <Style x:Key="smallTogglePressButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FF9FA7AF" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel
                        x:Name="dpnlToggleButtonContent"
                        Width="{TemplateBinding Width}"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=NewDefaultViews/buton1.png}" />
                        </DockPanel.Background>
                        <!--<Image x:Name="imgToggleButtonLeft"
                               Width="auto"
                               DockPanel.Dock="Left"
                               Source="{converters2:ResolveImagePath Path=NewDefaultViews/buton1-active.png}"
                               Stretch="UniformToFill" />-->
                        <!--<Image x:Name="imgToggleButtonRight"
                               Width="10"
                               DockPanel.Dock="Right"
                               Source="{converters2:ResolveImagePath Path=NewDefaultViews/menu-up-active-righte-part.png}"
                               Stretch="UniformToFill" />-->
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=NewDefaultViews/buton1-active.png}" />
                                </Setter.Value>
                            </Setter>
                            <!--<Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=NewDefaultViews/buton1-active.png}" />-->
                            <!--<Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=NewDefaultViews/menu-up-active-righte-part.png}" />-->
                            <Setter Property="Foreground" Value="#FFEFEFEF" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsEnabled" Value="false">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=NewDefaultViews/buton1.png}" />
                                </Setter.Value>
                            </Setter>
                            <!--<Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=NewDefaultViews/buton1.png}" />-->
                            <!--<Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=NewDefaultViews/menu-up-paccive-righte-part.png}" />-->
                            <Setter Property="Foreground" Value="#FF474B51" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="StakeBetTogglePressButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFf6391c" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel
                        x:Name="dpnlToggleButtonContent"
                        Width="{TemplateBinding Width}"
                        Height="33"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=StakeBetCenter.png}" />
                        </DockPanel.Background>
                        <Image
                            x:Name="imgToggleButtonLeft"
                            Width="3"
                            Height="33"
                            DockPanel.Dock="Left"
                            Source="{converters2:ResolveImagePath Path=StakeBetLeft.png}" />
                        <Image
                            x:Name="imgToggleButtonRight"
                            Width="3"
                            Height="33"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=StakeBetRight.png}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FF474B51" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="Foreground" Value="#FFf6391c" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="togglePressButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FF656565" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel
                        x:Name="dpnlToggleButtonContent"
                        Width="{TemplateBinding Width}"
                        Height="70"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenter.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="70"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="3"
                            Height="70"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenterGreen.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonLeftGreen.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonRightGreen.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="OddResultTextBlockLiveBetdomain" TargetType="{x:Type TextBlock}">
        <Setter Property="Width" Value="110" />
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="FontWeight" Value="UltraBold" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <!--  <Setter Property="Foreground" Value="#FFE5E5E5" />  -->
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="OddResultTextBlockLive2" TargetType="{x:Type TextBlock}">
        <Setter Property="Width" Value="63" />
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <!--  <Setter Property="Foreground" Value="#FFE5E5E5" />  -->
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>


    <Storyboard x:Key="ChangeDownStoryboard">
        <ObjectAnimationUsingKeyFrames
            Storyboard.TargetName="imgGridDown"
            Storyboard.TargetProperty="(UIElement.Visibility)"
            Duration="00:00:12">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:0.5" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:1" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:1.5" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:2" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:12" Value="{x:Static Visibility.Hidden}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames
            Storyboard.TargetName="txtOddValue"
            Storyboard.TargetProperty="(UIElement.Visibility)"
            Duration="00:00:12">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:0.5" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:1" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:1.5" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:2" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:12" Value="{x:Static Visibility.Visible}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="ChangeUpStoryboard">
        <ObjectAnimationUsingKeyFrames
            Storyboard.TargetName="imgGridUp"
            Storyboard.TargetProperty="(UIElement.Visibility)"
            Duration="00:00:12">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:0.5" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:1" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:1.5" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:2" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:12" Value="{x:Static Visibility.Hidden}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames
            Storyboard.TargetName="txtOddValue"
            Storyboard.TargetProperty="(UIElement.Visibility)"
            Duration="00:00:12">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:0.5" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:1" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:1.5" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:2" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:12" Value="{x:Static Visibility.Visible}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Style x:Key="toggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FF656565" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel
                        x:Name="dpnlToggleButtonContent"
                        Width="{TemplateBinding Width}"
                        Height="70"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenter.png}" />
                        </DockPanel.Background>
                        <Image
                            x:Name="imgToggleButtonLeft"
                            Width="3"
                            Height="70"
                            DockPanel.Dock="Left"
                            Source="{converters2:ResolveImagePath Path=PressButtonLeft.png}" />
                        <Image
                            x:Name="imgToggleButtonRight"
                            Width="3"
                            Height="70"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=PressButtonRight.png}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsPressed" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsEnabled" Value="false">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenterGreen.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonLeftGreen.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonRightGreen.png}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
            <!--
                <DataTrigger Binding="{Binding Value}" Value="0">
                <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            -->
        </Style.Triggers>
    </Style>


    <Style x:Key="toggleButtonBetDomain" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FF656565" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel
                        x:Name="dpnlToggleButtonContent"
                        Width="{TemplateBinding Width}"
                        Height="68"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenter.png}" />
                        </DockPanel.Background>
                        <Image
                            x:Name="imgToggleButtonLeft"
                            Width="4"
                            Height="68"
                            DockPanel.Dock="Left"
                            Source="{converters2:ResolveImagePath Path=PressButtonLeft.png}" />
                        <Image
                            x:Name="imgToggleButtonRight"
                            Width="4"
                            Height="68"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=PressButtonRight.png}" />

                        <Grid>

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <DockPanel
                                Name="dockValue"
                                Width="130"
                                Margin="0,0,10,0"
                                HorizontalAlignment="Right"
                                Visibility="Visible">
                                <Grid
                                    Name="imgGridValue"
                                    HorizontalAlignment="Right"
                                    DockPanel.Dock="Right"
                                    Visibility="Visible">
                                    <TextBlock
                                        Name="txtOddValue"
                                        Margin="0,19,0,0"
                                        HorizontalAlignment="Right"
                                        DockPanel.Dock="Right"
                                        FontSize="30"
                                        Foreground="#FFEFEFEF"
                                        Style="{StaticResource OddResultTextBlockLiveBetdomain}"
                                        Text="{Binding Value, StringFormat=\{0:n2\}}" />
                                </Grid>
                            </DockPanel>
                            <DockPanel
                                Name="dockChangeUp"
                                Width="130"
                                Margin="0,0,10,0"
                                HorizontalAlignment="Right"
                                Visibility="Visible">
                                <Grid
                                    Name="imgGridUp"
                                    HorizontalAlignment="Right"
                                    DockPanel.Dock="Top"
                                    Visibility="Hidden">
                                    <Polygon
                                        Width="15"
                                        Height="15"
                                        Margin="-60,-16,6,6"
                                        Fill="LawnGreen"
                                        Points="0,0 12,0 , 0,12"
                                        Stroke="LawnGreen" />

                                    <TextBlock
                                        Margin="0,19,0,0"
                                        FontSize="30"
                                        Foreground="LawnGreen"
                                        Style="{StaticResource OddResultTextBlockLiveBetdomain}"
                                        Text="{Binding Value, StringFormat=\{0:n2\}}" />
                                </Grid>
                            </DockPanel>
                            <DockPanel
                                Name="dockChangeDown"
                                Width="130"
                                Margin="0,0,10,0"
                                HorizontalAlignment="Right"
                                Visibility="Visible">
                                <Grid
                                    Name="imgGridDown"
                                    HorizontalAlignment="Right"
                                    DockPanel.Dock="Bottom"
                                    Visibility="Hidden">
                                    <Polygon
                                        Width="15"
                                        Height="15"
                                        Margin="-60,17,0,-26"
                                        Fill="Red"
                                        Points="0,0 0,12 , 12,12"
                                        Stroke="Red" />

                                    <TextBlock
                                        Margin="0,19,0,0"
                                        FontSize="30"
                                        Foreground="Red"
                                        Style="{StaticResource OddResultTextBlockLiveBetdomain}"
                                        Text="{Binding Value, StringFormat=\{0:n2\}}" />
                                </Grid>
                            </DockPanel>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsPressed" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsEnabled" Value="false">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>#FF3b3b3b</Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{x:Null}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenterGreen.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonLeftGreen.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonRightGreen.png}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding ChangedUp}" Value="true">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="BeginChangeUpStoryboard" />
                                <RemoveStoryboard BeginStoryboardName="BeginChangeDownStoryboard" />
                                <BeginStoryboard x:Name="BeginChangeUpStoryboard" Storyboard="{StaticResource ChangeUpStoryboard}" />

                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ChangedDown}" Value="true">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="BeginChangeDownStoryboard" />
                                <RemoveStoryboard BeginStoryboardName="BeginChangeUpStoryboard" />
                                <BeginStoryboard x:Name="BeginChangeDownStoryboard" Storyboard="{StaticResource ChangeDownStoryboard}" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
            <Trigger Property="ToggleButton.IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF7c7c7c" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="navigationButton">
        <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Button.VerticalContentAlignment" Value="Center" />
        <Setter Property="Button.Padding" Value="10,0,10,0" />
        <Setter Property="Button.Margin" Value="-1,0,0,0" />
        <Setter Property="Button.SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="60"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-center.png}" />
                        </DockPanel.Background>

                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-left.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-right.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-center-.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-left-.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-right-.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-center-.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-left-.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-right-.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="searchButton">
        <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Button.VerticalContentAlignment" Value="Center" />
        <Setter Property="Button.Padding" Value="10,0,10,0" />
        <Setter Property="Button.Margin" Value="-1,0,0,0" />
        <Setter Property="Button.SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="60"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonCenter.png}" />
                        </DockPanel.Background>

                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ChangeTracker.IsSearchOpen}" Value="true">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="userListButton">
        <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Button.VerticalContentAlignment" Value="Center" />
        <Setter Property="Button.Padding" Value="10,0,10,0" />
        <Setter Property="Button.Margin" Value="-1,0,0,0" />
        <Setter Property="Button.SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="60"
                        LastChildFill="True">
                        <DockPanel.Background>Transparent</DockPanel.Background>

                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>Transparent</DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>Transparent</DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>#33ffffff</Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>#33ffffff</Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>#33ffffff</Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>#33ffffff</Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>#33ffffff</Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>#33ffffff</Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="headerButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="95"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonCenter.png}" />
                        </DockPanel.Background>

                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="95"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="3"
                            Height="95"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="BasketButtonBlink" TargetName="dpnlContent">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Duration="0:0:1.5">
            <ObjectAnimationUsingKeyFrames.KeyFrames>
                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                    <DiscreteObjectKeyFrame.Value>
                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Highlited_Button_Center.png}" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>

                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Box_Button_Center.png}" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>

                <DiscreteObjectKeyFrame KeyTime="0:0:0.6">
                    <DiscreteObjectKeyFrame.Value>
                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Highlited_Button_Center.png}" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>

                <DiscreteObjectKeyFrame KeyTime="0:0:0.9">
                    <DiscreteObjectKeyFrame.Value>
                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Box_Button_Center.png}" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>

                <DiscreteObjectKeyFrame KeyTime="0:0:1.2">
                    <DiscreteObjectKeyFrame.Value>
                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Highlited_Button_Center.png}" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>

                <DiscreteObjectKeyFrame KeyTime="0:0:1.5">
                    <DiscreteObjectKeyFrame.Value>
                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Box.png}" Stretch="Fill" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>

            </ObjectAnimationUsingKeyFrames.KeyFrames>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Style x:Key="navigationButtonTicket" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="102"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Box_Button_Center.png}" />
                        </DockPanel.Background>

                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="4"
                            Height="102"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Box_Button_Left.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="4"
                            Height="102"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Box_Button_Right.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Highlited_Button_Center.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Highlited_Button_Left.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Highlited_Button_Right.png}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="BeginBasketBlink" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <DataTrigger Binding="{Binding TicketHandler.Count}" Value="0">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ChangeTracker.IsBasketOpen}" Value="true">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeRight.png}" />
                                </Setter.Value>
                            </Setter>
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="BeginBasketBlink" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <!--
                            <DataTrigger Binding="{Binding StationRepository.Active}" Value="0">
                            <Setter Property="Source" Value="{converters2:ResolveImagePath Path=ticket-button-red.png}" />
                            </DataTrigger>
                        -->

                        <DataTrigger Binding="{Binding ChangeTracker.BetSelected}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="BeginBasketBlink" Storyboard="{StaticResource BasketButtonBlink}" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ChangeTracker.BetSelected}" Value="false">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="BeginBasketBlink" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="navigationButtonLogin" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="102"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonCenter.png}" />
                        </DockPanel.Background>

                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="4"
                            Height="102"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="4"
                            Height="102"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedHeaderButtonOrangeCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedHeaderButtonOrangeLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedHeaderButtonOrangeRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Label}}, Path=DataContext.ChangeTracker.IsUserProfile}" Value="true">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Label}}, Path=DataContext.ChangeTracker.IsUserManagementWindowVisible}" Value="true">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonOrangeRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="navigationButtonOrange" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="60"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{Binding Path=ForwardButtonImagePath, Converter={StaticResource ImagePathConverter}}" />
                        </DockPanel.Background>

                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{Binding Path=ForwardButtonLeftImagePath, Converter={StaticResource ImagePathConverter}}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{Binding Path=ForwardButtonRightImagePath, Converter={StaticResource ImagePathConverter}}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedBreadcrumbsButtonCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedBreadcrumbsButtonLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedBreadcrumbsButtonRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="navigationButtonWithValidation"
        BasedOn="{StaticResource navigationButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true" Visibility="{Binding Count, Converter={StaticResource BiggerThanToVisibilityCollapsedConverter}, ConverterParameter=0}">
                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                        <Image
                            Width="5"
                            Height="50"
                            Margin="-5,0,0,0"
                            Source="{converters2:ResolveImagePath Path=ValidationError.png}" />
                        <TextBlock
                            Width="80"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            AutomationProperties.AutomationId="ErrorMessage"
                            DockPanel.Dock="Right"
                            FontSize="13"
                            Foreground="red"
                            Text="{Binding [0].ErrorContent}"
                            TextWrapping="Wrap" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <!--  empty  -->
            <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="true">
                                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                                <Image
                                    Width="5"
                                    Height="60"
                                    Margin="-5,0,0,0"
                                    Source="{converters2:ResolveImagePath Path=ValidationWarning.png}" />
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="registrationStretchButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <DockPanel
                            x:Name="dpnlContent"
                            Width="{TemplateBinding Width}"
                            Height="60"
                            LastChildFill="True">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonCenter.png}" />
                            </DockPanel.Background>
                            <DockPanel
                                x:Name="dpnlLeft"
                                Width="3"
                                Height="60"
                                DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonLeft.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel
                                x:Name="dpnlRight"
                                Width="3"
                                Height="60"
                                DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonRight.png}" />
                                </DockPanel.Background>
                            </DockPanel>

                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </DockPanel>
                        <Canvas
                            x:Name="DisabledCover"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ZIndex="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedSmallButtonCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedSmallButtonLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedSmallButtonRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DisabledCover" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Button-pattern.png}" Opacity="50" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="registrationButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <DockPanel
                            x:Name="dpnlContent"
                            Width="{TemplateBinding Width}"
                            Height="60"
                            LastChildFill="True">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/SmallButtonCenter.png}" />
                            </DockPanel.Background>
                            <DockPanel
                                x:Name="dpnlLeft"
                                Width="3"
                                Height="60"
                                DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/SmallButtonLeft.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel
                                x:Name="dpnlRight"
                                Width="3"
                                Height="60"
                                DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/SmallButtonRight.png}" />
                                </DockPanel.Background>
                            </DockPanel>

                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </DockPanel>
                        <Canvas
                            x:Name="DisabledCover"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ZIndex="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/PressedSmallButtonCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/PressedSmallButtonLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/PressedSmallButtonRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DisabledCover" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Button-pattern.png}" Opacity="50" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="registrationMediumButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="68" />
        <Setter Property="Width" Value="185" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <DockPanel
                            x:Name="dpnlContent"
                            Width="{TemplateBinding Width}"
                            Height="60"
                            LastChildFill="True">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonCenter.png}" />
                            </DockPanel.Background>
                            <DockPanel
                                x:Name="dpnlLeft"
                                Width="3"
                                Height="60"
                                DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonLeft.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel
                                x:Name="dpnlRight"
                                Width="3"
                                Height="60"
                                DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonRight.png}" />
                                </DockPanel.Background>
                            </DockPanel>

                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </DockPanel>
                        <Canvas
                            x:Name="DisabledCover"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ZIndex="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedSmallButtonCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedSmallButtonLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedSmallButtonRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DisabledCover" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Button-pattern.png}" Opacity="50" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="registrationSmallButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <DockPanel
                            x:Name="dpnlContent"
                            Width="{TemplateBinding Width}"
                            Height="50"
                            LastChildFill="True">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonCenter.png}" />
                            </DockPanel.Background>
                            <DockPanel
                                x:Name="dpnlLeft"
                                Width="3"
                                Height="50"
                                DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonLeft.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel
                                x:Name="dpnlRight"
                                Width="3"
                                Height="50"
                                DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonRight.png}" />
                                </DockPanel.Background>
                            </DockPanel>

                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </DockPanel>
                        <Canvas
                            x:Name="DisabledCover"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ZIndex="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedSmallButtonCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedSmallButtonLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedSmallButtonRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DisabledCover" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Button-pattern.png}" Opacity="50" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="orangeButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="60"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-center-.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="60"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-left-.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="3"
                            Height="60"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-right-.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-6-center-.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-6-left-.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-6-right-.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-center-.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-left-.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-right-.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="bigOrangeButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="90" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="90"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenterOrange.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="90"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownOrangeLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="3"
                            Height="90"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonRightOrange.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenterDownOrange.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonLeftDownOrange.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonRightDownOrange.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="navigationButtonArray" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        Width="{TemplateBinding Width}"
                        Height="60"
                        LastChildFill="True">
                        <Image
                            x:Name="imgNavigationButtonRight"
                            Width="27"
                            Height="60"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=BreadcrumbsArrow.png}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="navigationButtonArrayFirst">
        <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Button.VerticalContentAlignment" Value="Center" />
        <Setter Property="Button.Padding" Value="0" />
        <Setter Property="Button.SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        Width="{TemplateBinding Width}"
                        Height="60"
                        LastChildFill="True">
                        <Image
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Left"
                            Source="{converters2:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                        <Image
                            x:Name="ButtonRightImage"
                            Width="27"
                            Height="60"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=BreadcrumbsArrow.png}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsTimeFilterEnabled}" Value="False">
                            <Setter TargetName="ButtonRightImage" Property="Source" Value="{converters2:ResolveImagePath Path=BreadcrumbsArrow_deactive.png}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsTimeFilterEnabled}" Value="True">
                            <Setter TargetName="ButtonRightImage" Property="Source" Value="{converters2:ResolveImagePath Path=BreadcrumbsArrow.png}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowResultFilters}" Value="True">
                            <Setter TargetName="ButtonRightImage" Property="Source" Value="{converters2:ResolveImagePath Path=BreadcrumbsArrow.png}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxReadonlyToggleButtonText" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,14,0,0" />
    </Style>

    <Style x:Key="ComboBoxReadonlyToggleButtonDockPanel" TargetType="{x:Type DockPanel}">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel x:Name="dpnlMain" LastChildFill="False">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonCenter.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlRight2"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <!--
                            <DockPanel x:Name="dpnlRight"
                            Width="25"
                            Height="20"
                            Margin="0,0,5,0"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ArrowDown.png}" />
                            </DockPanel.Background>
                            </DockPanel>
                        -->
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlMain" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight2" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsRight.png}" />
                                </Setter.Value>
                            </Setter>
                            <!--  <Setter Property="Visibility" Value="Collapsed" TargetName="dpnlRight"/>  -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxReadonlyToggleButtonKeyboard" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel x:Name="dpnlMain" LastChildFill="False">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonCenter.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlRight2"
                            Width="4"
                            Height="50"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlMain" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight2" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UserManagemenComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel x:Name="dpnlMain" LastChildFill="False">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonCenter.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlRight2"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <Image
                            Width="19"
                            Height="14"
                            Margin="0,5,10,0"
                            HorizontalAlignment="Right"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=dropdown_arrow.png}" />
                        <!--
                            <DockPanel x:Name="dpnlRight"
                            Width="25"
                            Height="20"
                            Margin="0,0,5,0"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ArrowDown.png}" />
                            </DockPanel.Background>
                            </DockPanel>
                        -->
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlMain" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight2" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsRight.png}" />
                                </Setter.Value>
                            </Setter>
                            <!--  <Setter Property="Visibility" Value="Collapsed" TargetName="dpnlRight"/>  -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UserProfileComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel x:Name="dpnlMain" LastChildFill="False">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsCenter.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlRight2"
                            Width="4"
                            Height="60"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <Image
                            Width="19"
                            Height="14"
                            Margin="0,5,10,0"
                            HorizontalAlignment="Right"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=dropdown_arrow.png}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="navigationComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" MinWidth="3" />
                            <ColumnDefinition Width="33" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome
                                x:Name="Shdw"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Color="Transparent">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#3B5A68"
                                    BorderBrush="Black"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer" PanningMode="VerticalOnly">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton
                            Grid.ColumnSpan="2"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxReadonlyToggleButton}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{StaticResource ComboBoxReadonlyToggleButtonDockPanel}" TargetType="{x:Type DockPanel}" />
                                <Style BasedOn="{StaticResource ComboBoxReadonlyToggleButtonText}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <!--  <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>  -->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="userBalanceComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid
                        x:Name="MainGrid"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" MinWidth="3" />
                            <ColumnDefinition Width="33" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome
                                x:Name="Shdw"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Color="Transparent">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#3B5A68"
                                    BorderBrush="Black"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer" PanningMode="VerticalOnly">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton
                            Grid.ColumnSpan="2"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource UserProfileComboBoxReadonlyToggleButton}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{StaticResource ComboBoxReadonlyToggleButtonDockPanel}" TargetType="{x:Type DockPanel}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <!--  <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>  -->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="TextBoxBorder" Color="#425465" />
    <!--<LinearGradientBrush x:Key="TextBoxBorder" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,20">
        <GradientStop Offset="0.05" Color="#ABADB3" />
        <GradientStop Offset="0.07" Color="#E2E3EA" />
        <GradientStop Offset="1" Color="#E3E9EF" />
    </LinearGradientBrush>-->

    <Style x:Key="AdaptiveUsernameTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#E3E3E3" />
        <Setter Property="Background" Value="#313131" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BorderBrush="Silver"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="True"
                        CornerRadius="16">
                        <Border
                            Margin="-2"
                            Background="Transparent"
                            BorderBrush="Black"
                            BorderThickness="1"
                            CornerRadius="16">
                            <Grid Width="{TemplateBinding Width}">
                                <Border
                                    Name="mask"
                                    Background="Silver"
                                    CornerRadius="10" />
                                <StackPanel>
                                    <StackPanel.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=mask}" />
                                    </StackPanel.OpacityMask>
                                    <DockPanel LastChildFill="True">
                                        <Microsoft_Windows_Themes:ListBoxChrome
                                            x:Name="Bd"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="0"
                                            RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                            RenderMouseOver="{TemplateBinding IsMouseOver}"
                                            SnapsToDevicePixels="true">
                                            <ScrollViewer
                                                x:Name="PART_ContentHost"
                                                HorizontalAlignment="Stretch"
                                                PanningMode="VerticalOnly"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Microsoft_Windows_Themes:ListBoxChrome>
                                    </DockPanel>
                                </StackPanel>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="5" />
                            </Border.Effect>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UsernameTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#E3E3E3" />
        <Setter Property="Background" Value="#313131" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BorderBrush="Silver"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="True"
                        CornerRadius="16">
                        <Border
                            Margin="-2"
                            Background="Transparent"
                            BorderBrush="Black"
                            BorderThickness="1"
                            CornerRadius="16">
                            <Grid Width="320">
                                <Border
                                    Name="mask"
                                    Background="Silver"
                                    CornerRadius="10" />
                                <StackPanel>
                                    <StackPanel.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=mask}" />
                                    </StackPanel.OpacityMask>
                                    <DockPanel LastChildFill="True">
                                        <Microsoft_Windows_Themes:ListBoxChrome
                                            x:Name="Bd"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="0"
                                            RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                            RenderMouseOver="{TemplateBinding IsMouseOver}"
                                            SnapsToDevicePixels="true">
                                            <ScrollViewer
                                                x:Name="PART_ContentHost"
                                                HorizontalAlignment="Stretch"
                                                PanningMode="VerticalOnly"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Microsoft_Windows_Themes:ListBoxChrome>
                                    </DockPanel>
                                </StackPanel>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="5" />
                            </Border.Effect>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UsernameTextBoxStyleWithLabelOnly" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <DockPanel LastChildFill="True">
                        <Microsoft_Windows_Themes:ListBoxChrome
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Black"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                            RenderMouseOver="{TemplateBinding IsMouseOver}"
                            SnapsToDevicePixels="true">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                PanningMode="VerticalOnly"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Microsoft_Windows_Themes:ListBoxChrome>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UsernameTextBoxStyleNoValidation" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <DockPanel LastChildFill="True">
                        <Microsoft_Windows_Themes:ListBoxChrome
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Black"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                            RenderMouseOver="{TemplateBinding IsMouseOver}"
                            SnapsToDevicePixels="true">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                PanningMode="VerticalOnly"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Microsoft_Windows_Themes:ListBoxChrome>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="hiddenScrollViewerControl" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle
                x:Name="Corner"
                Grid.Row="1"
                Grid.Column="1"
                Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.Row="0"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="Collapsed"
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Orientation="Horizontal"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </ControlTemplate>

    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="DarkGray"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        Name="Border"
                        Margin="1"
                        Background="Transparent"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="{StaticResource GlyphBrush}"
                            Visibility="Collapsed" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                Background="Transparent"
                CornerRadius="2" />
            <RepeatButton
                Grid.Row="0"
                Height="18"
                Style="{StaticResource ScrollBarLineButton}" />
            <Track
                Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Width="5"
                        Margin="1,0,1,0"
                        Background="{StaticResource HorizontalNormalBrush}"
                        BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                        Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Row="3"
                Height="18"
                Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="visibleScrollViewerControl" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle
                            x:Name="Corner"
                            Grid.Row="1"
                            Grid.Column="1"
                            Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False"
                            CanVerticallyScroll="False"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type Grid}}, Path=DataContext.SBVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="0"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="Collapsed"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="secondVisibleScrollView" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle
                x:Name="Corner"
                Grid.Row="1"
                Grid.Column="1"
                Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.Row="0"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Right"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{Binding SBVisibility}"
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Orientation="Horizontal"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="Collapsed"
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </ControlTemplate>


    <Style x:Key="OddButtonVirtual" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFE5E5E5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type Grid}}, Path=DataContext.PlaceBet}" />
        <Setter Property="CommandParameter" Value="{Binding}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel
                        x:Name="dpnlToggleButtonContent"
                        Width="{TemplateBinding Width}"
                        Height="68"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenter.png}" />
                        </DockPanel.Background>
                        <Image
                            x:Name="imgToggleButtonLeft"
                            Width="4"
                            Height="68"
                            DockPanel.Dock="Left"
                            Source="{converters2:ResolveImagePath Path=PressButtonLeft.png}" />
                        <Image
                            x:Name="imgToggleButtonRight"
                            Width="4"
                            Height="68"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=PressButtonRight.png}" />


                        <Polygon
                            Width="15"
                            Height="15"
                            Margin="-45,5,0,0"
                            DockPanel.Dock="Top"
                            Fill="LawnGreen"
                            Points="0,0 12,0 , 0,12"
                            Stroke="LawnGreen"
                            Visibility="Hidden" />
                        <!--  Points="0,9 10,9 , 5,0" Stroke="LawnGreen" Fill="LawnGreen"/>  -->
                        <Polygon
                            Width="15"
                            Height="15"
                            Margin="-45,5,0,0"
                            DockPanel.Dock="Bottom"
                            Fill="Red"
                            Points="0,0 0,12 , 12,12"
                            Stroke="Red"
                            Visibility="Hidden" />
                        <Grid>


                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <DockPanel Name="dockChangeUp">
                                <Grid
                                    Name="imgGridUp"
                                    DockPanel.Dock="Top"
                                    Visibility="Hidden">
                                    <Polygon
                                        Width="15"
                                        Height="15"
                                        Margin="-36,-36,6,6"
                                        Fill="LawnGreen"
                                        Points="0,0 12,0 , 0,12"
                                        Stroke="LawnGreen" />

                                    <Grid>
                                        <TextBlock
                                            Margin="0,1,0,0"
                                            VerticalAlignment="Center"
                                            Foreground="LawnGreen"
                                            Style="{StaticResource OddResultTextBlockLive2}"
                                            Text="{Binding Value, StringFormat=\{0:n2\}}" />
                                        <TextBlock
                                            Margin="0,1,0,0"
                                            VerticalAlignment="Center"
                                            Foreground="LawnGreen"
                                            Style="{StaticResource OddResultTextBlockLive2}"
                                            Text="{Binding Value, StringFormat=\{0:n2\}}" />
                                    </Grid>
                                </Grid>
                            </DockPanel>
                            <DockPanel Name="dockChangeDown">
                                <Grid
                                    Name="imgGridDown"
                                    DockPanel.Dock="Bottom"
                                    Visibility="Hidden">
                                    <Polygon
                                        Width="15"
                                        Height="15"
                                        Margin="-36,0,6,-46"
                                        Fill="Red"
                                        Points="0,0 0,12 , 12,12"
                                        Stroke="Red" />

                                    <Grid>
                                        <TextBlock
                                            Margin="0,1,0,0"
                                            VerticalAlignment="Center"
                                            Foreground="Red"
                                            Style="{StaticResource OddResultTextBlockLive2}"
                                            Text="{Binding Value, StringFormat=\{0:n2\}}" />
                                        <TextBlock
                                            Margin="0,1,0,0"
                                            VerticalAlignment="Center"
                                            Foreground="Red"
                                            Style="{StaticResource OddResultTextBlockLive2}"
                                            Text="{Binding Value, StringFormat=\{0:n2\}}" />
                                        <TextBlock
                                            Margin="0,1,0,0"
                                            VerticalAlignment="Center"
                                            Foreground="Red"
                                            Style="{StaticResource OddResultTextBlockLive2}"
                                            Text="{Binding Value, StringFormat=\{0:n2\}}" />
                                        <TextBlock
                                            Margin="0,1,0,0"
                                            VerticalAlignment="Center"
                                            Foreground="Red"
                                            Style="{StaticResource OddResultTextBlockLive2}"
                                            Text="{Binding Value, StringFormat=\{0:n2\}}" />
                                    </Grid>
                                </Grid>
                            </DockPanel>

                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsPressed" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedOddsSelectedCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressedOddsSelectedLeft.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressedOddsSelectedRight.png}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsEnabled" Value="false">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{x:Null}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{x:Null}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenterGreen.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonLeftGreen.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonRightGreen.png}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
            <Trigger Property="ToggleButton.IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FFb3b3b3" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="GOddButtonLive" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFE5E5E5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type Grid}}, Path=DataContext.PlaceBet}" />
        <Setter Property="CommandParameter" Value="{Binding}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel
                        x:Name="dpnlToggleButtonContent"
                        Width="{TemplateBinding Width}"
                        Height="70"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenter.png}" />
                        </DockPanel.Background>
                        <Image
                            x:Name="imgToggleButtonLeft"
                            Width="3"
                            Height="70"
                            DockPanel.Dock="Left"
                            Source="{converters2:ResolveImagePath Path=PressButtonLeft.png}" />
                        <Image
                            x:Name="imgToggleButtonRight"
                            Width="3"
                            Height="70"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=PressButtonRight.png}" />

                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsPressed" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsEnabled" Value="false">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenterGreen.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonLeftGreen.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonRightGreen.png}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
            <Trigger Property="ToggleButton.IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF656565" />
            </Trigger>
        </Style.Triggers>
    </Style>






    <Style
        x:Key="GButtonLive"
        BasedOn="{StaticResource GOddButtonLive}"
        TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
            <Trigger Property="ToggleButton.IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="GButtonBottomLive" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFE5E5E5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type Grid}}, Path=DataContext.PlaceBet}" />
        <Setter Property="CommandParameter" Value="{Binding}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel
                        x:Name="dpnlToggleButtonContent"
                        Width="{TemplateBinding Width}"
                        Height="45"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenter.png}" />
                        </DockPanel.Background>
                        <Image
                            x:Name="imgToggleButtonLeft"
                            Width="3"
                            Height="45"
                            DockPanel.Dock="Left"
                            Source="{converters2:ResolveImagePath Path=PressButtonLeft.png}" />
                        <Image
                            x:Name="imgToggleButtonRight"
                            Width="3"
                            Height="45"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=PressButtonRight.png}" />

                        <ContentPresenter
                            Margin="0,0,0,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsPressed" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsEnabled" Value="false">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenterGreen.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="imgToggleButtonLeft" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonLeftGreen.png}" />
                            <Setter TargetName="imgToggleButtonRight" Property="Source" Value="{converters2:ResolveImagePath Path=PressButtonRightGreen.png}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
            <Trigger Property="ToggleButton.IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FFE5E5E5" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="ImageCheckbox" TargetType="CheckBox">
        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Border
                    Padding="10"
                    Background="{StaticResource LightBlueToDarkBluer_LinearGradientBrush}"
                    CornerRadius="10">
                    <Image
                        Name="TickImage"
                        Width="30"
                        Height="30"
                        Source="{converters2:ResolveImagePath Path=checkbox_img.png}" />
                </Border>
            </BulletDecorator.Bullet>
            <ContentPresenter
                Margin="4,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                RecognizesAccessKey="True" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="TickImage" Property="Source" Value="{converters2:ResolveImagePath Path=checkbox_checked.png}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ImageCheckboxOrange" TargetType="CheckBox">
        <BulletDecorator
            Width="65"
            Height="65"
            Background="Transparent">
            <BulletDecorator.Bullet>
                <Image
                    Name="TickImage"
                    Width="35"
                    Height="35"
                    Margin="25,30,0,0"
                    Source="{converters2:ResolveImagePath Path=checkbox_img.png}" />
            </BulletDecorator.Bullet>
            <ContentPresenter
                Margin="4,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                RecognizesAccessKey="True" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="TickImage" Property="Source" Value="{converters2:ResolveImagePath Path=checkbox_checked_orange.png}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ImageRadioButton" TargetType="RadioButton">
        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Image
                    Name="TickImage"
                    Width="30"
                    Height="30"
                    Source="{converters2:ResolveImagePath Path=radibutton_img.png}" />
            </BulletDecorator.Bullet>
            <ContentPresenter
                Margin="4,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                RecognizesAccessKey="True" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="TickImage" Property="Source" Value="{converters2:ResolveImagePath Path=radiobutton_checked.png}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="normalText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground"
                Value="#A2A2A2" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <!--<Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#FFEFEFEF" />
        <Setter Property="LineHeight" Value="22" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />-->
    </Style>

    <Style x:Key="squareComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="70*" MinWidth="3" />
                            <ColumnDefinition Width="7" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome
                                x:Name="Shdw"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Color="Transparent">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#FF2F3234"
                                    BorderBrush="Black"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer" PanningMode="VerticalOnly">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="60"
                            Margin="0,0,0,0">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ToggleButton
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxReadonlyToggleButton}" />
                        <ContentPresenter
                            Grid.Column="1"
                            Grid.ColumnSpan="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                            <Setter.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                            </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                            <Setter.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                            <Setter.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                            </Setter.Value>
                            </Setter>
                            </Trigger>
                        -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="squareComboBoxKeyboard" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="70*" MinWidth="3" />
                            <ColumnDefinition Width="7" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome
                                x:Name="Shdw"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Color="Transparent">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#FF2F3234"
                                    BorderBrush="Black"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer" PanningMode="VerticalOnly">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="50"
                            Margin="0,0,0,0">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ToggleButton
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxReadonlyToggleButtonKeyboard}" />
                        <ContentPresenter
                            Grid.Column="1"
                            Grid.ColumnSpan="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="languageComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Height" Value="60" />
        <Setter Property="MaxDropDownHeight" Value="auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="70*" MinWidth="3" />
                            <ColumnDefinition Width="7" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome
                                x:Name="Shdw"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Color="Transparent">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#FF2F3234"
                                    BorderBrush="Black"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer" PanningMode="VerticalOnly">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="60"
                            Margin="0,0,0,0">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ToggleButton
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxReadonlyToggleButton}" />
                        <ContentPresenter
                            Grid.Column="1"
                            Grid.ColumnSpan="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                            <Setter.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                            </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                            <Setter.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                            <Setter.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                            </Setter.Value>
                            </Setter>
                            </Trigger>
                        -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="userManagementSquareComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BorderBrush="Silver"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="False"
                        CornerRadius="16">
                        <Border
                            Margin="-2"
                            Background="Transparent"
                            BorderBrush="Black"
                            BorderThickness="1"
                            CornerRadius="14">
                            <Grid Width="320" Height="60">
                                <Border
                                    Name="mask"
                                    Background="Silver"
                                    CornerRadius="16" />
                                <StackPanel>
                                    <StackPanel.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=mask}" />
                                    </StackPanel.OpacityMask>
                                    <Grid
                                        x:Name="MainGrid"
                                        Height="60"
                                        SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="3" />
                                            <ColumnDefinition Width="70*" MinWidth="3" />
                                            <ColumnDefinition Width="7" />
                                        </Grid.ColumnDefinitions>
                                        <Popup
                                            x:Name="PART_Popup"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Margin="1"
                                            AllowsTransparency="true"
                                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                            Placement="Bottom"
                                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome
                                                x:Name="Shdw"
                                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                Color="Transparent">
                                                <Border
                                                    x:Name="DropDownBorder"
                                                    Background="#FF2F3234"
                                                    BorderBrush="Black"
                                                    BorderThickness="1">
                                                    <ScrollViewer x:Name="DropDownScrollViewer" PanningMode="VerticalOnly">
                                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                                            <Canvas
                                                                Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                                <Rectangle
                                                                    x:Name="OpaqueRect"
                                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                                                            </Canvas>
                                                            <ItemsPresenter
                                                                x:Name="ItemsPresenter"
                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Grid>
                                                    </ScrollViewer>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                        <DockPanel
                                            x:Name="dpnlLeft"
                                            Width="3"
                                            Height="60"
                                            Margin="0,0,0,0">
                                            <DockPanel.Background>
                                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/SmallButtonLeft.png}" />
                                            </DockPanel.Background>
                                        </DockPanel>
                                        <ToggleButton
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Style="{StaticResource UserManagemenComboBoxReadonlyToggleButton}" />
                                        <ContentPresenter
                                            Grid.Column="1"
                                            Grid.ColumnSpan="1"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            IsHitTestVisible="false"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </StackPanel>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="5" />
                            </Border.Effect>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=LoginRegister/PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                            <Setter.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                            </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                            <Setter.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                            </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                            <Setter.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                            </Setter.Value>
                            </Setter>
                            </Trigger>
                        -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="squareComboBoxWithValidation"
        BasedOn="{StaticResource squareComboBox}"
        TargetType="{x:Type ComboBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true" Visibility="{Binding Count, Converter={StaticResource BiggerThanToVisibilityCollapsedConverter}, ConverterParameter=0}">
                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                        <Image
                            Width="5"
                            Height="50"
                            Margin="-5,0,0,0"
                            Source="{converters2:ResolveImagePath Path=ValidationError.png}" />
                        <TextBlock
                            Width="80"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            AutomationProperties.AutomationId="ErrorMessage"
                            DockPanel.Dock="Right"
                            FontSize="13"
                            Foreground="red"
                            Text="{Binding [0].ErrorContent}"
                            TextWrapping="Wrap" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <!--  empty  -->
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="true">
                                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                                <Image
                                    Width="5"
                                    Height="60"
                                    Margin="-5,0,0,0"
                                    Source="{converters2:ResolveImagePath Path=ValidationWarning.png}" />
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="extraLargeNavigationButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="120"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ExtraLargeBreadcrumbsCenter.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="120"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ExtraLargeBreadcrumbsLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="3"
                            Height="120"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ExtraLargeBreadcrumbsRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ExtraLargePressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ExtraLargePressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ExtraLargePressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NewExtraLargeNavigationButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="90"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsCenter.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="90"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="3"
                            Height="90"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="extraLargeUserProfileButton" TargetType="{x:Type RadioButton}">
        <Setter Property="FontSize" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#EFA030" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="nonRadioUserProfileButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="extraLargeUserProfileToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="largeNavigationButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        Height="70"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsCenter.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            Height="70"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="3"
                            Height="70"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="headerEntry" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"
                Value="#9C9C9C" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="LineHeight" Value="18" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="bigHeaderEntry" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFEFEFEF" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="LineHeight" Value="22" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="userManagementHeaderEntry" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="LineHeight" Value="12" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="rowEntry" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF9FA7AF" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="LineHeight" Value="15" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="bigRowEntry" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFEFEFEF" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="LineHeight" Value="19" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="tabText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="FontSize" Value="35" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="LineHeight" Value="50" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="20,0" />
    </Style>

    <Style x:Key="tabTextApproval" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="LineHeight" Value="50" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="Padding" Value="0,0,20,0" />
    </Style>

    <Style x:Key="importantText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground"
                Value="#D3D3D3" />
        <Setter Property="LineHeight" Value="20" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="notImportantText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#FFC0C0C0" />
    </Style>

    <Style x:Key="SmallComboBoxReadonlyToggleButtonText" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="-25,9,0,0" />
    </Style>

    <Style x:Key="UserManagementSmallComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel LastChildFill="False">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=SmallButtonCenter.png}" />
                        </DockPanel.Background>
                        <Image
                            Height="40"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=SmallButtonRight.png}">
                            <Image.RenderTransform>
                                <ScaleTransform
                                    CenterX="0.5"
                                    CenterY="0.5"
                                    ScaleX="1"
                                    ScaleY="1" />
                            </Image.RenderTransform>
                        </Image>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel LastChildFill="False">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsCenter.png}" />
                        </DockPanel.Background>
                        <Image
                            Height="40"
                            DockPanel.Dock="Right"
                            Source="{converters2:ResolveImagePath Path=ComboBoxArray.png}">
                            <Image.RenderTransform>
                                <ScaleTransform
                                    CenterX="0.5"
                                    CenterY="0.5"
                                    ScaleX="1"
                                    ScaleY="1" />
                            </Image.RenderTransform>
                        </Image>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UserManagementSmallSquareComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" MinWidth="3" />
                            <ColumnDefinition Width="25" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome
                                x:Name="Shdw"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Color="Transparent">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#FF2F3234"
                                    BorderBrush="Black"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer" PanningMode="VerticalOnly">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <Image
                            Width="3"
                            Height="40"
                            Margin="0,0,0,0"
                            Source="{converters2:ResolveImagePath Path=SmallButtonLeft.png}" />
                        <ToggleButton
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource UserManagementSmallComboBoxReadonlyToggleButton}" />
                        <ContentPresenter
                            Grid.Column="1"
                            Grid.ColumnSpan="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{StaticResource SmallComboBoxReadonlyToggleButtonText}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SmallSquareComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" MinWidth="3" />
                            <ColumnDefinition Width="25" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome
                                x:Name="Shdw"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Color="Transparent">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#FF2F3234"
                                    BorderBrush="Black"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer" PanningMode="VerticalOnly">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <Image
                            Width="3"
                            Height="40"
                            Margin="0,0,0,0"
                            Source="{converters2:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                        <ToggleButton
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource SmallComboBoxReadonlyToggleButton}" />
                        <ContentPresenter
                            Grid.Column="1"
                            Grid.ColumnSpan="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{StaticResource SmallComboBoxReadonlyToggleButtonText}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallRowEntry" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF9FA7AF" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="LineHeight" Value="18" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="largeText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#FFEFEFEF" />
        <Setter Property="LineHeight" Value="22" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="sportBarRadioButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Play" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="{TemplateBinding Width}"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonCenter.png}" />
                        </DockPanel.Background>
                        <DockPanel
                            x:Name="dpnlLeft"
                            Width="3"
                            DockPanel.Dock="Left">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonLeft.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <DockPanel
                            x:Name="dpnlRight"
                            Width="3"
                            DockPanel.Dock="Right">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonRight.png}" />
                            </DockPanel.Background>
                        </DockPanel>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonDownCenter.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonDownLeft.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonDownRight.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonCenterOrange.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlLeft" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonLeftOrange.png}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="dpnlRight" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonRightOrange.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonScrollLeft">
        <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Button.VerticalContentAlignment" Value="Center" />
        <Setter Property="Button.Padding" Value="10,0,10,0" />
        <Setter Property="Button.Margin" Value="-1,0,0,0" />
        <Setter Property="Button.SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="46"
                        Height="46"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ScrollLeftActive.png}" />
                        </DockPanel.Background>

                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ScrollLeftInactive.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonScrollRight">
        <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Button.VerticalContentAlignment" Value="Center" />
        <Setter Property="Button.Padding" Value="10,0,10,0" />
        <Setter Property="Button.Margin" Value="-1,0,0,0" />
        <Setter Property="Button.SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="46"
                        Height="46"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ScrollRightActive.png}" />
                        </DockPanel.Background>

                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ScrollRightInactive.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonScrollUp">
        <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Button.VerticalContentAlignment" Value="Center" />
        <Setter Property="Button.Padding" Value="10,0,10,0" />
        <Setter Property="Button.Margin" Value="-1,0,0,0" />
        <Setter Property="Button.SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="46"
                        Height="46"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ScrollUpActive.png}" />
                        </DockPanel.Background>

                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ScrollUpInactive.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonScrollDown">
        <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Button.VerticalContentAlignment" Value="Center" />
        <Setter Property="Button.Padding" Value="10,0,10,0" />
        <Setter Property="Button.Margin" Value="-1,0,0,0" />
        <Setter Property="Button.SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="46"
                        Height="46"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ScrollDownActive.png}" />
                        </DockPanel.Background>

                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="dpnlContent" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=ScrollDownInactive.png}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonClose">
        <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Button.VerticalContentAlignment" Value="Center" />
        <Setter Property="Button.Padding" Value="10,0,10,0" />
        <Setter Property="Button.Margin" Value="-1,0,0,0" />
        <Setter Property="Button.SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel
                        x:Name="dpnlContent"
                        Width="48"
                        Height="48"
                        LastChildFill="True">
                        <DockPanel.Background>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=close.png}" />
                        </DockPanel.Background>

                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>