<UserControl
    x:Class="DefaultViews.Views.PinKeyboardView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Models="clr-namespace:SportBetting.WPF.Prism.Models;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:WpfHelper="clr-namespace:SportBetting.WPF.Prism.WpfHelper;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:converters="clr-namespace:SportBetting.WPF.Prism.Shared.Converters;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:l="clr-namespace:TranslationByMarkupExtension;assembly=TranslationByMarkupExtension"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shared="clr-namespace:SportBetting.WPF.Prism.Shared;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:viewModels="clr-namespace:BaseObjects.ViewModels;assembly=BaseObjects"
    x:Name="TicketCheckerViewControl"
    d:DataContext="{d:DesignInstance viewModels:PinKeyboardViewModel}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <shared:ImagePathConverter x:Key="ImagePathConverter" />

        <!--  a bit different than standard keyboard button  -->
        <Style x:Key="keyboardButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="60" />
            <Setter Property="Margin" Value="5,0,5,0" />
            <Setter Property="TextBlock.FontSize" Value="22" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.Foreground" Value="Black" />
            <Setter Property="TextBlock.TextAlignment" Value="Left" />
            <Setter Property="TextBlock.LineHeight" Value="22" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.LineStackingStrategy" Value="BlockLineHeight" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FontFamily" Value="Bitstream Cyberbase, Roman" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                    
                                
            
                                  
                                    <DockPanel x:Name="dpnlToggleButtonContent"                                               
                                       Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       LastChildFill="True">
                                <DockPanel.Background>
                                <ImageBrush ImageSource="{converters:ResolveImagePath Path=BasketView/basket-buton-5.png}" />
                                </DockPanel.Background>                       
                            <!--<DockPanel x:Name="dpnlLeft"
                                           Width="3"
                                           DockPanel.Dock="Left">
                                    <DockPanel.Background>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=BasketView/basket-buton-5-left.png}" />
                                    </DockPanel.Background>
                                </DockPanel>
                                <DockPanel x:Name="dpnlRight"
                                           Width="3"
                                           DockPanel.Dock="Right">
                                    <DockPanel.Background>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=BasketView/basket-buton-5-right.png}" />
                                    </DockPanel.Background>
                                </DockPanel>-->
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>



                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=BasketView/basket-buton-5-.png}" />
                                    </Setter.Value>
                                </Setter>
                                <!--<Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=BasketView/basket-buton-5-left-.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=BasketView/basket-buton-5-right-.png}" />
                                    </Setter.Value>
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="False">
                    <!--  This is here because we're setting it slightly differently when the button is being pressed.  -->
                    <Setter Property="Margin" Value="0,0,2,1" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Direction="315" Opacity="0.7" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <!--  Shift the button downward and to the right slightly, to give the affect of being pushed inward.  -->
                    <Setter Property="Margin" Value="2,1,0,0" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect
                                Direction="135"
                                Opacity="0.5"
                                ShadowDepth="2" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  a bit different than standard keyboard button  -->
        <Style x:Key="orangeKeyboardButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="60" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Margin" Value="5,0,5,0" />
            <Setter Property="TextBlock.FontSize" Value="22" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.Foreground" Value="#FFEFEFEF" />
            <Setter Property="TextBlock.TextAlignment" Value="Left" />
            <Setter Property="TextBlock.LineHeight" Value="22" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.LineStackingStrategy" Value="BlockLineHeight" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FontFamily" Value="Bitstream Cyberbase, Roman" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <DockPanel
                            x:Name="dpnlToggleButtonContent"
                            Width="{TemplateBinding Width}"
                            LastChildFill="True">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters:ResolveImagePath Path=BasketView/basket-buton-7.png}" />
                            </DockPanel.Background>                            
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="dpnlToggleButtonContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=BasketView/basket-buton-7-.png}" />
                                    </Setter.Value>
                                </Setter>                               
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="False">
                    <!--  This is here because we're setting it slightly differently when the button is being pressed.  -->
                    <Setter Property="Margin" Value="0,0,2,1" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Direction="315" Opacity="0.7" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <!--  Shift the button downward and to the right slightly, to give the affect of being pushed inward.  -->
                    <Setter Property="Margin" Value="2,1,0,0" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect
                                Direction="135"
                                Opacity="0.5"
                                ShadowDepth="2" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>





    <DockPanel LastChildFill="True">

        <!--  container  -->
        <DockPanel Margin="0,20,0,0" HorizontalAlignment="Center">
            <StackPanel Orientation="Vertical">
                <!--  1 2 3 4  -->
                <StackPanel Margin="0,5,0,5"
                            Orientation="Horizontal">
                    <Button Width="85"
                                Margin="0,0,5,0"
                                Command="{Binding ButtonCommand}"
                                CommandParameter="1"
                            Style="{StaticResource keyboardButton}"
                               >
                            <TextBlock Text="1" />                      
                        </Button>
     
                    <Button
                        Width="66"
                        Margin="0,0,5,0"
                        Command="{Binding ButtonCommand}"
                        CommandParameter="2"
                        Style="{StaticResource keyboardButton}">
                        <TextBlock Text="2" />
                    </Button>
                    <Button
                        Width="66"
                        Margin="0,0,5,0"
                        Command="{Binding ButtonCommand}"
                        CommandParameter="3"
                        Style="{StaticResource keyboardButton}">
                        <TextBlock Text="3" />
                    </Button>
                    <Button Width="85"
                        Command="{Binding ButtonCommand}"
                        CommandParameter="4"
                        Style="{StaticResource keyboardButton}">
                        <TextBlock Text="4" />
                    </Button>
                </StackPanel>
                <!--  5 6 7 8  -->
                <StackPanel Margin="0,5,0,5" Orientation="Horizontal">
                    <Button Width="85"
                        Margin="0,0,5,0"
                        Command="{Binding ButtonCommand}"
                        CommandParameter="5"
                        Style="{StaticResource keyboardButton}">
                        <TextBlock Text="5" />
                    </Button>
                    <Button
                        Width="66"
                        Margin="0,0,5,0"
                        Command="{Binding ButtonCommand}"
                        CommandParameter="6"
                        Style="{StaticResource keyboardButton}">
                        <TextBlock Text="6" />
                    </Button>
                    <Button
                        Width="66"
                        Margin="0,0,5,0"
                        Command="{Binding ButtonCommand}"
                        CommandParameter="7"
                        Style="{StaticResource keyboardButton}">
                        <TextBlock Text="7" />
                    </Button>
                    <Button Width="85"
                        Command="{Binding ButtonCommand}"
                        CommandParameter="8"
                        Style="{StaticResource keyboardButton}">
                        <TextBlock Text="8" />
                    </Button>
                </StackPanel>
                <!--  clear 9 0 <  -->
                <StackPanel Margin="0,5,0,5" Orientation="Horizontal">
                    <Button Width="85"
                        Margin="0,0,5,0"
                        Command="{Binding ButtonClearCommand}"
                        Style="{StaticResource orangeKeyboardButton}">
                        <TextBlock Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_FORM_CLEAR}}" />
                    </Button>
                    <Button
                        Width="66"
                        Margin="0,0,5,0"
                        Command="{Binding ButtonCommand}"
                        CommandParameter="9"
                        Style="{StaticResource keyboardButton}">
                        <TextBlock Text="9" />
                    </Button>
                    <Button
                        Width="66"
                        Margin="0,0,5,0"
                        Command="{Binding ButtonCommand}"
                        CommandParameter="0"
                        Style="{StaticResource keyboardButton}">
                        <TextBlock Text="0" />
                    </Button>
                    <Button Width="85"
                        Command="{Binding ButtonBackCommand}"
                        Style="{StaticResource orangeKeyboardButton}">
                        <Image
                            Width="20"
                            Height="17"
                            RenderTransformOrigin="0.5,0.5"
                            Source="{converters:ResolveImagePath Path=ArrowDown.png}">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Button>
                </StackPanel>
            </StackPanel>
        </DockPanel>
    </DockPanel>


</UserControl>
