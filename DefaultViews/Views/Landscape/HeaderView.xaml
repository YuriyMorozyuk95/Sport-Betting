<UserControl
    x:Class="DefaultViews.Views.Landscape.HeaderView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:WpfHelper="clr-namespace:SportBetting.WPF.Prism.WpfHelper;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:converters="clr-namespace:SportBetting.WPF.Prism.Converters;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:converters2="clr-namespace:SportBetting.WPF.Prism.Shared.Converters;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:l="clr-namespace:TranslationByMarkupExtension;assembly=TranslationByMarkupExtension"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:SportBetting.WPF.Prism.Shared.Models;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:shared="clr-namespace:SportBetting.WPF.Prism.Shared;assembly=SportBetting.WPF.Prism.Shared"
    xmlns:viewModels="clr-namespace:ViewModels;assembly=ViewModels"
    xmlns:viewModels2="clr-namespace:ViewModels.ViewModels;assembly=ViewModels"
    xmlns:viewModels3="clr-namespace:ViewModels.ViewModels;assembly=ViewModels"
    xmlns:visualEffectsHelper="clr-namespace:DefaultViews.Views"
    d:DataContext="{d:DesignInstance Type=viewModels3:HeaderViewModel}"
    mc:Ignorable="d">
    <UserControl.Background>
        <ImageBrush
            AlignmentX="Left"
            AlignmentY="Top"
            ImageSource="{converters2:ResolveImagePath Path=LiveView/fon.png}"
            Stretch="None"
            TileMode="Tile"
            Viewport="0,0,33,36"
            ViewportUnits="Absolute" />
    </UserControl.Background>
    <UserControl.Resources>
        <WpfHelper:NextButtonVisibilityConverter x:Key="NextButtonVisibilityConverter" />
        <WpfHelper:LiveSportMatchDetailsIsOpenedToBackgroundColorConverter x:Key="LiveSportMatchDetailsIsOpenedToBackgroundColorConverter" />
        <shared:BooleanToVisibilityCollapsedConverter x:Key="myBooleanToVisibilityCollapsedConverter" />
        <shared:MultiBiggerThanToBooleanConverter x:Key="myMultiBiggerThanToBooleanConverter" />
        <converters:MultiBooleanANDToVisibilityHiddenConverter x:Key="myMultyBooleanToVisibilityConverter" />
        <converters:MultiBooleanANDToVisibilityCollapsedConverter x:Key="myMultyBooleanToVisibilityCollapsedConverter" />
        <converters:MultiBooleanORToVisibilityConverter x:Key="myBooleanToVisibilityConverter" />
        <shared:InverseBooleanToVisibilityCollapsedConverter x:Key="myInverseBooleanToVisibilityConverter" />
        <shared:BiggerThanToBooleanConverter x:Key="BiggerThanToBooleanConverter" />
        <shared:SportDescriptorImageSelector x:Key="SportDescriptorToIconConverter" />
        <converters2:CashpoolColorConverter x:Key="CashpoolColorConverter" />

        <converters2:IsAuthorizeVisiblyConvertor x:Key="IsAuthorizeConvertor" />
        <converters2:IsNotAuthorizeVisiblyConvertor x:Key="IsNotAuthorizeConvertor" />



        <Style x:Key="WrapableTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Myriad Pro" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Medium" />
        </Style>

        <Style x:Key="sportBarRadioButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Play" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <DockPanel x:Name="dpnlContent1" Width="{TemplateBinding Width}">
                            <DockPanel
                                x:Name="dpnlLeft"
                                Width="19"
                                DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-up-paccive-leftpart.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel
                                x:Name="dpnlRight"
                                Width="19"
                                DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-up-paccive-righte-part.png}" />
                                </DockPanel.Background>
                            </DockPanel>

                            <DockPanel
                                x:Name="dpnlContent"
                                Width="{TemplateBinding Width}"
                                LastChildFill="True">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-up-paccive-centerpart.png}" />
                                </DockPanel.Background>
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-up-active-centerpart.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-up-active-leftpart.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-up-active-righte-part.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="buttonNextStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Play" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <DockPanel x:Name="dpnlContent1" Width="{TemplateBinding Width}">
                            <DockPanel
                                x:Name="dpnlLeft"
                                Width="19"
                                DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-left-.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel
                                x:Name="dpnlRight"
                                Width="19"
                                DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-right-.png}" />
                                </DockPanel.Background>
                            </DockPanel>

                            <DockPanel
                                x:Name="dpnlContent"
                                Width="{TemplateBinding Width}"
                                LastChildFill="True">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-5-center-.png}" />
                                </DockPanel.Background>

                                <StackPanel
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Margin="3,0,3,5"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_NEXT}}" />
                                    <Image
                                        Name="Image"
                                        Width="15"
                                        Height="18"
                                        Margin="0,0,0,5"
                                        Source="{converters2:ResolveImagePath Path=HeaderImages/next-0.png}" />
                                </StackPanel>
                            </DockPanel>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-6-center-.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-6-left-.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BasketView/basket-buton-6-right-.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Image" Property="Source" Value="{converters2:ResolveImagePath Path=HeaderImages/next-0.png}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="searchRadioButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Play" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        BlurRadius="3"
                        ShadowDepth="1"
                        Color="#FFC3C3C3" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <DockPanel
                            x:Name="dpnlContent"
                            Width="{TemplateBinding Width}"
                            LastChildFill="True">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonCenter.png}" />
                            </DockPanel.Background>
                            <DockPanel
                                x:Name="dpnlLeft"
                                Width="3"
                                DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel
                                x:Name="dpnlRight"
                                Width="3"
                                DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsRight.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedBreadcrumbsButtonCenter.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedBreadcrumbsButtonLeft.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedBreadcrumbsButtonRight.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonCenterOrange.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownOrangeLeft.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownOrangeRight.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect
                                BlurRadius="3"
                                ShadowDepth="1"
                                Color="Black" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="BasketBlink">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Duration="0:0:1.5">
                <ObjectAnimationUsingKeyFrames.KeyFrames>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                        <DiscreteObjectKeyFrame.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Highlited.png}" Stretch="Fill" />
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                        <DiscreteObjectKeyFrame.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Box.png}" Stretch="Fill" />
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6">
                        <DiscreteObjectKeyFrame.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Highlited.png}" Stretch="Fill" />
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.9">
                        <DiscreteObjectKeyFrame.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Box.png}" Stretch="Fill" />
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.2">
                        <DiscreteObjectKeyFrame.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Highlited.png}" Stretch="Fill" />
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.5">
                        <DiscreteObjectKeyFrame.Value>
                            <ImageBrush ImageSource="{converters2:ResolveImagePath Path=Basket_Box.png}" Stretch="Fill" />
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames.KeyFrames>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="sportsToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Play" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Name="imgTopToggleButton">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-sports.png}" />
                            </Grid.Background>
                            <ContentPresenter RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="imgTopToggleButton" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-sports-active.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="liveToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Name="imgTopToggleButton">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-live.png}" />
                            </Grid.Background>
                            <ContentPresenter RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="imgTopToggleButton" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-live-active.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="resultsToggleButton" TargetType="{x:Type ToggleButton}">

            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Name="imgTopToggleButton">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-result.png}" />
                            </Grid.Background>
                            <ContentPresenter RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="imgTopToggleButton" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-result-active.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="navigationButton">
            <Setter Property="Button.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Button.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Button.VerticalContentAlignment" Value="Center" />
            <Setter Property="Button.Padding" Value="10,0,10,0" />
            <Setter Property="Button.Margin" Value="-1,0,0,0" />
            <Setter Property="Button.SnapsToDevicePixels" Value="True" />
            <Setter Property="Button.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <DockPanel
                            x:Name="dpnlContent"
                            Width="{TemplateBinding Width}"
                            Height="60"
                            LastChildFill="True">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsButtonCenter.png}" />
                            </DockPanel.Background>

                            <DockPanel
                                x:Name="dpnlLeft"
                                Width="4"
                                Height="60"
                                DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsLeft.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel
                                x:Name="dpnlRight"
                                Width="4"
                                Height="60"
                                DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=BreadcrumbsRight.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedBreadcrumbsButtonCenter.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedBreadcrumbsButtonLeft.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedBreadcrumbsButtonRight.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownLeft.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressButtonDownRight.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="virtualToggleButton" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Play" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <StackPanel Background="Transparent" Orientation="Vertical">
                            <Image
                                x:Name="imgTopToggleButton"
                                Width="86"
                                Height="60"
                                HorizontalAlignment="Center"
                                Source="{converters2:ResolveImagePath Path=VirtualSportsIcon.png}" />
                            <Viewbox
                                Width="80"
                                Height="37"
                                MaxWidth="80"
                                MaxHeight="40"
                                VerticalAlignment="Bottom"
                                StretchDirection="DownOnly">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Bottom"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Viewbox>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="imgTopToggleButton" Property="Source" Value="{converters2:ResolveImagePath Path=VirtualSportsIconSelected.png}" />
                                <Setter Property="Foreground" Value="#FFFF4D00" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsEnabled" Value="False">
                                <Setter TargetName="imgTopToggleButton" Property="Source" Value="{converters2:ResolveImagePath Path=VirtualSportsIconDisabled.png}" />
                                <Setter Property="Foreground" Value="#5A6164" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect
                                BlurRadius="3"
                                ShadowDepth="1"
                                Color="Black" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <viewModels:UserTemplateSelector x:Key="UserTemplateSelector" />
        <shared:UserToBooleanConverter x:Key="UserToBooleanConverter" />
        <shared:InverseUserToBooleanConverter x:Key="InverseUserToBooleanConverter" />
        <shared:InvertBooleanConverter x:Key="myInvertBooleanConverter" />
        <shared:MultistringTagConverter x:Key="MultistringTagConverter" />

        <Style
            x:Key="showHideButton"
            BasedOn="{StaticResource navigationButton}"
            TargetType="{x:Type Button}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ChangeTracker.CurrentUser, Converter={StaticResource InverseUserToBooleanConverter}, ConverterParameter=OperatorUser}" Value="True">
                    <Setter Property="StackPanel.Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="navigationButtonOrangeHeader" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="-1,0,0,0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <DockPanel
                            x:Name="dpnlContent"
                            Width="{TemplateBinding Width}"
                            Height="102"
                            LastChildFill="True">
                            <DockPanel.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonCenter.png}" />
                            </DockPanel.Background>

                            <DockPanel
                                x:Name="dpnlLeft"
                                Width="4"
                                Height="102"
                                DockPanel.Dock="Left">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonLeft.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <DockPanel
                                x:Name="dpnlRight"
                                Width="4"
                                Height="102"
                                DockPanel.Dock="Right">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderButtonRight.png}" />
                                </DockPanel.Background>
                            </DockPanel>
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedHeaderButtonCenter.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlLeft" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedHeaderButtonLeft.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="dpnlRight" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=PressedHeaderButtonRight.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="navigationOrangeHeader" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Name="imgTopToggleButton">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-caashout.png}" />
                            </Grid.Background>
                            <ContentPresenter RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="imgTopToggleButton" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-caashout-active.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="navigationButtonOrangeHeaderAndPressed" TargetType="{x:Type ToggleButton}">

            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Name="imgTopToggleButton">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-tickets.png}" />
                            </Grid.Background>
                            <ContentPresenter RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="imgTopToggleButton" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/menu-tickets-active.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ShowHideText" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Play" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="Foreground" Value="#FFEFEFEF" />
            <Setter Property="LineHeight" Value="13" />
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
            <Setter Property="TextAlignment" Value="Left" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowMenu}" Value="true">
                    <Setter Property="Text" Value="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_FORM_HIDE}}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ShowMenu}" Value="false">
                    <Setter Property="Text" Value="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_FORM_SHOW}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="buttonNext" TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Visibility" Value="{Binding Source={x:Static WpfHelper:VisualEffectsHelper.Singleton}, Path=LiveSportMatchDetailsIsOpened, Converter={StaticResource NextButtonVisibilityConverter}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Padding="5">
                            <Image
                                Name="Image"
                                MinWidth="22"
                                Source="{converters2:ResolveImagePath Path=HeaderImages/next-active.png}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Image" Property="Source" Value="{converters2:ResolveImagePath Path=HeaderImages/next-0.png}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="buttonBack" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Padding="5" Background="{Binding Source={x:Static WpfHelper:VisualEffectsHelper.Singleton}, Path=LiveSportMatchDetailsIsOpened, Converter={StaticResource LiveSportMatchDetailsIsOpenedToBackgroundColorConverter}}">
                            <Image
                                Name="Image"
                                MinWidth="22"
                                Source="{converters2:ResolveImagePath Path=HeaderImages/back-active.png}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Image" Property="Source" Value="{converters2:ResolveImagePath Path=HeaderImages/back-0.png}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="buttonSearch" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="10,0,10,0" />
            <Setter Property="Margin" Value="-1,0,0,0" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <StackPanel Name="ButtonSearch" Orientation="Horizontal">
                            <Image Name="Image" Source="{converters2:ResolveImagePath Path=HeaderImages/Search.png}" />
                            <TextBlock
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                Opacity="0.5"
                                Style="{StaticResource WrapableTextBlock}"
                                Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_FORM_SEARCH_BTN}}" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ButtonSearch" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid Margin="25" Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="35*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="90*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="60*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="100*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="55*" />
            </Grid.ColumnDefinitions>
            <Image
                Grid.Column="1"
                Opacity="0.4"
                Source="{converters2:ResolveImagePath Path=HeaderImages/logo.png}" />
            <!--  NotAuthorize  -->
            <StackPanel
                Grid.Column="3"
                VerticalAlignment="Center"
                Visibility="{Binding IsAuthorized, Converter={StaticResource IsNotAuthorizeConvertor}}">

                <TextBlock
                    Opacity="0.6"
                    Style="{StaticResource WrapableTextBlock}"
                    Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_AVAILABLE_CASH}}" />

                <TextBlock
                    HorizontalAlignment="Left"
                    AutomationProperties.AutomationId="Balance"
                    FontFamily="Play"
                    FontSize="16"
                    FontWeight="Bold"
                    Foreground="{Binding ChangeTracker.CurrentUser.AvailableCash, Converter={StaticResource CashpoolColorConverter}}"
                    LineHeight="16"
                    Style="{StaticResource WrapableTextBlock}"
                    TextAlignment="Left"
                    TextWrapping="Wrap">

                    <Run Text="{Binding ChangeTracker.CurrentUser.AvailableCash, StringFormat=\{0:N2\}, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" />
                    <Run Text="€" />
                </TextBlock>
            </StackPanel>

            <!--  Authorize  -->

            <StackPanel
                Grid.Column="3"
                VerticalAlignment="Center"
                Visibility="{Binding IsAuthorized, Converter={StaticResource IsAuthorizeConvertor}}">

                <TextBlock
                    HorizontalAlignment="Left"
                    Opacity="0.6"
                    Style="{StaticResource WrapableTextBlock}">
                    <Run Text="Hi, " />
                    <Run Text="{Binding ChangeTracker.CurrentUser.Username}" />
                </TextBlock>

                <TextBlock
                    HorizontalAlignment="Left"
                    AutomationProperties.AutomationId="Balance"
                    FontFamily="Play"
                    FontSize="16"
                    FontWeight="Bold"
                    Foreground="{Binding ChangeTracker.CurrentUser.AvailableCash, Converter={StaticResource CashpoolColorConverter}}"
                    LineHeight="16"
                    Style="{StaticResource WrapableTextBlock}"
                    TextAlignment="Left"
                    TextWrapping="Wrap">
                    <Run Text="{Binding ElementName=TextBalance, Path=Text}" />
                    <Run Text=" : " />
                    <Run Text="{Binding ChangeTracker.CurrentUser.AvailableCash, StringFormat=\{0:N2\}, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" />
                    <Run Text="€" />

                    <TextBlock
                        Name="TextBalance"
                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_PRINTER_TOTAL_BALANCE}}"
                        Visibility="Collapsed" />
                </TextBlock>
            </StackPanel>

            <Button
                Margin="5"
                Name="LogBtn"
                Grid.Column="5"
                Command="{Binding OpenAuthorizationCommand}"
              >
                <Button.Template>
                    <ControlTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Name="Image" Source="{converters2:ResolveImagePath Path=HeaderImages/login.png}" />
                            <TextBlock
                                Name="NameText"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="#63A269"
                                Style="{StaticResource WrapableTextBlock}"
                                TextDecorations="Underline"
                                       Text="{Binding LoginButtonText}">
                            </TextBlock>
                        </StackPanel>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button
                Grid.Column="6"
                    Margin="5"
                    Command="{Binding LogoutCommand}"
                Visibility="{Binding IsAuthorized, Converter={StaticResource IsAuthorizeConvertor}}">
                <Button.Template>
                    <ControlTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Name="Image" Source="{converters2:ResolveImagePath Path=HeaderImages/logout.png}" />
                            <TextBlock
                                Name="NameText"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Opacity="0.6"
                                Style="{StaticResource WrapableTextBlock}"
                                Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_FORM_LOGOUT}}"
                                TextDecorations="Underline" />
                        </StackPanel>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <!--    -->
            <Button
                Grid.Column="7"
                Width="370"
                Height="60"
                Command="{Binding OpenPlaceBetCommand}">

                <Button.Template>
                    <ControlTemplate>
                        <Grid Name="BackGroundGrid">
                            <Grid.Background>
                                <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/baasket-0.png}" />
                            </Grid.Background>
                            <Grid Margin="60,12,10,10">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <StackPanel
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Foreground="Black"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_NUMBER_BETS}}" />
                                    <TextBlock
                                        Margin="5,0,10,0"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="{Binding TicketHandler.Count}" />
                                </StackPanel>
                                <StackPanel
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Foreground="Black"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_TOTAL_ODD}}" />
                                    <TextBlock
                                        Margin="5,0,10,0"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="{Binding TicketHandler.TotalOddDisplay, StringFormat=\{0:N2\}}" />
                                </StackPanel>
                                <StackPanel
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Foreground="Black"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_PRINT_STAKE_TOTAL}}" />
                                    <TextBlock
                                        Margin="5,0,0,0"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="{Binding TicketHandler.Stake, StringFormat=\{0:N2\}}" />
                                    <TextBlock
                                        Margin="5,0,5,0"
                                        Foreground="Black"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="€" />
                                </StackPanel>
                                <StackPanel
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Foreground="Black"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_POSSWIN}}" />
                                    <TextBlock
                                        Margin="5,0,0,0"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="{Binding TicketHandler.CurrentTicketPossibleWin, StringFormat=\{0:N2\}}" />
                                    <TextBlock
                                        Margin="5,0,5,0"
                                        Foreground="Black"
                                        Style="{StaticResource WrapableTextBlock}"
                                        Text="€" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsAuthorized}" Value="True">
                                <Setter TargetName="BackGroundGrid" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/baasket-activ.png}" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsAuthorized}" Value="False">
                                <Setter TargetName="BackGroundGrid" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters2:ResolveImagePath Path=HeaderImages/baasket-0.png}" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>

        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="55*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="90*" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <RadioButton
                    Name="sportsToggleButton"
                    Width="126"
                    Height="49"
                    Command="{Binding ShowCategoriesViewCommand}"
                    Focusable="false"
                    GroupName="headerBtn"
                    IsChecked="{Binding ChangeTracker.SelectedSports}"
                    IsEnabled="{Binding ChangeTracker.CurrentUser, Converter={StaticResource InverseUserToBooleanConverter}, ConverterParameter=OperatorUser}"
                    Style="{StaticResource sportsToggleButton}"
                    Visibility="{Binding StationRepository.IsPrematchEnabled, Converter={StaticResource myBooleanToVisibilityCollapsedConverter}}">

                    <TextBlock
                        Margin="12,0,0,19"
                        Style="{StaticResource WrapableTextBlock}"
                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_SPORTS}}" />
                </RadioButton>

                <RadioButton
                    Name="liveToggleButton"
                    Width="120"
                    Height="49"
                    Command="{Binding ShowLiveViewCommand}"
                    Focusable="false"
                    GroupName="headerBtn"
                    IsChecked="{Binding ChangeTracker.SelectedLive}"
                    IsEnabled="{Binding ChangeTracker.CurrentUser, Converter={StaticResource InverseUserToBooleanConverter}, ConverterParameter=OperatorUser}"
                    Style="{StaticResource liveToggleButton}"
                    Visibility="{Binding StationRepository.IsLiveMatchEnabled, Converter={StaticResource myBooleanToVisibilityCollapsedConverter}}">

                    <TextBlock
                        Margin="35,0,0,19"
                        Style="{StaticResource WrapableTextBlock}"
                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_FORM_LIVE_BETS}}" />

                </RadioButton>

                <RadioButton
                    Name="resultsToggleButton"
                    Width="117"
                    Height="49"
                    Command="{Binding ShowResultsViewCommand}"
                    Focusable="false"
                    GroupName="headerBtn"
                    IsChecked="{Binding ChangeTracker.SelectedResults}"
                    IsEnabled="{Binding ChangeTracker.CurrentUser, Converter={StaticResource InverseUserToBooleanConverter}, ConverterParameter=OperatorUser}"
                    Style="{StaticResource resultsToggleButton}"
                    Visibility="{Binding StationRepository.ResultsVisible, Converter={StaticResource myBooleanToVisibilityCollapsedConverter}}">

                    <TextBlock
                        Margin="20,0,0,19"
                        Style="{StaticResource WrapableTextBlock}"
                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_RESULTS}}" />
                </RadioButton>

                <Button
                    Name="btnCashOut"
                    Width="126"
                    Height="49"
                    HorizontalAlignment="Left"
                    AutomationProperties.AutomationId="CashOut"
                    Background="Red"
                    Command="{Binding PrintCreditNoteCommand}"
                    Focusable="false"
                    Foreground="#FFC0C0C0"
                    Style="{StaticResource navigationOrangeHeader}">

                    <TextBlock
                        Margin="10,0,0,19"
                        Style="{StaticResource WrapableTextBlock}"
                        Text="{l:Translate Key={x:Static l:MultistringTags.CASH_OUT}}" />
                </Button>

                <RadioButton
                    Name="BtnInsCrdt"
                    Width="178"
                    MaxHeight="49"
                    AutomationProperties.AutomationId="InsertTicket"
                    Command="{Binding InsertCreditNoteCommand}"
                    Foreground="#FFC0C0C0"
                    GroupName="headerBtn"
                    IsChecked="{Binding ChangeTracker.SelectedTicket}"
                    IsEnabled="{Binding ChangeTracker.CurrentUser, Converter={StaticResource InverseUserToBooleanConverter}, ConverterParameter=OperatorUser}"
                    Style="{StaticResource navigationButtonOrangeHeaderAndPressed}">
                    <!--    -->

                    <TextBlock
                        Margin="0,0,0,19"
                        Style="{StaticResource WrapableTextBlock}"
                        Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_INSERT_TICKET}}" />
                </RadioButton>
            </StackPanel>
            <StackPanel
                Grid.Column="3"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <Button
                    Name="btnPrev"
                    Width="21"
                    Height="26"
                    AutomationProperties.AutomationId="Back"
                    Command="{Binding PrevView}"
                    FontSize="20"
                    FontWeight="Bold"
                    Foreground="#FFC0C0C0"
                    Style="{StaticResource buttonBack}"
                    Visibility="{Binding StationRepository.IsTestMode, Converter={StaticResource myInverseBooleanToVisibilityConverter}}" />
                <Separator
                    Height="26"
                    Margin="40,0,40,0"
                    Opacity="0.5"
                    Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                <Button
                    Name="btnNext"
                    Width="21"
                    Height="26"
                    AutomationProperties.AutomationId="Forward"
                    Command="{Binding NextView}"
                    FontSize="20"
                    FontWeight="Bold"
                    Foreground="#FFC0C0C0"
                    Style="{StaticResource buttonNext}" />
            </StackPanel>
        </Grid>
        <Grid Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" />
                <!--  1  -->
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="80*" />
                <!--  3  -->
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <!--  5  -->
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="40*" />
            </Grid.ColumnDefinitions>


            <!--  Region  -->
            <!--  live match buttons  -->
            <Grid
                Name="LiveMatchFilters"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                Visibility="{Binding ChangeTracker.SelectedLive, Converter={StaticResource myBooleanToVisibilityCollapsedConverter}}">
                <UniformGrid HorizontalAlignment="Stretch" Columns="3">
                    <RadioButton
                        Grid.Column="0"
                        Height="49"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="livebysport"
                        Command="{Binding LiveModeCommand}"
                        CommandParameter="0"
                        GroupName="LiveTimeFilterButtons"
                        IsChecked="{Binding LiveBySportChecked}"
                        Style="{StaticResource sportBarRadioButton}">
                        <!--    -->
                        <Viewbox StretchDirection="DownOnly">
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <Image Margin="0,-5,0,0"
                                    Width="34"
                                    Height="34"
                                    VerticalAlignment="Center"
                                    Source="{converters2:ResolveImagePath Path=World.png}" />
                                <TextBlock Margin="0,-5,0,0"                                    
                                    VerticalAlignment="Center"
                                           Style="{StaticResource WrapableTextBlock}"
                                           Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_LIVE_BY_SPORT}}" />
                            </StackPanel>
                        </Viewbox>
                    </RadioButton>

                    <RadioButton
                        Grid.Column="0"
                        Height="49"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="topgameslive"
                        Command="{Binding LiveModeCommand}"
                        CommandParameter="4"
                        GroupName="LiveTimeFilterButtons"
                        Style="{StaticResource sportBarRadioButton}">
                        <Viewbox StretchDirection="DownOnly">
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <Image Margin="0,-5,0,0"
                                    Width="34"
                                    Height="34"
                                    VerticalAlignment="Center"
                                    Source="{converters2:ResolveImagePath Path=Top.png}" />
                                <TextBlock Margin="0,-5,0,0"
                                   
                                    VerticalAlignment="Center"
                                           Style="{StaticResource WrapableTextBlock}"
                                           Text="{l:Translate Key={x:Static l:MultistringTags.TOP_GAMES}}" />
                            </StackPanel>
                        </Viewbox>
                    </RadioButton>

                    <RadioButton
                        Grid.Column="0"
                        Height="49"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="livetimetable"
                        Command="{Binding LiveModeCommand}"
                        CommandParameter="3"
                        GroupName="LiveTimeFilterButtons"
                        Style="{StaticResource sportBarRadioButton}">
                        <Viewbox StretchDirection="DownOnly">
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <Image Margin="0,-5,0,0"
                                    Width="34"
                                    Height="34"
                                    VerticalAlignment="Center"
                                    Source="{converters2:ResolveImagePath Path=Live.png}" />
                                <TextBlock Margin="0,-5,0,0"
                                    
                                    VerticalAlignment="Center"
                                           Style="{StaticResource WrapableTextBlock}"
                                           Text="{l:Translate Key={x:Static l:MultistringTags.LIVE_TIMETABLE}}" />
                            </StackPanel>
                        </Viewbox>
                    </RadioButton>
                </UniformGrid>
            </Grid>

            <!--  match filters  -->
            <Grid
                Name="MatchFilters"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                Visibility="{Binding ChangeTracker.SelectedSports, Converter={StaticResource myBooleanToVisibilityCollapsedConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="31*" />
                    <ColumnDefinition Width="21*" />
                    <ColumnDefinition Width="24*" />
                    <ColumnDefinition Width="22*" />
                </Grid.ColumnDefinitions>
                <RadioButton
                    Grid.Column="0"
                    Height="49"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    AutomationProperties.AutomationId="toptournaments"
                    Command="{Binding TopTournamentsCommand}"
                    GroupName="MatchFilterButtons"
                    IsChecked="{Binding TopTournamentsChecked}"
                    Style="{StaticResource sportBarRadioButton}">
                    <Viewbox StretchDirection="DownOnly">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Image Margin="0,-5,0,0"
                                Width="34"
                                Height="34"
                                VerticalAlignment="Center"
                                Source="{converters2:ResolveImagePath Path=Top.png}" />
                            <TextBlock Margin="0,-5,0,0"
                                
                                VerticalAlignment="Center"
                                       Style="{StaticResource WrapableTextBlock}"
                                       Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_TOP_TOURNAMENTS}}" />
                        </StackPanel>
                    </Viewbox>
                </RadioButton>

                <RadioButton
                    Grid.Column="1"
                    Height="49"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    AutomationProperties.AutomationId="allsports"
                    Command="{Binding AllSportsCommand}"
                    GroupName="MatchFilterButtons"
                    IsChecked="False"
                    Style="{StaticResource sportBarRadioButton}">
                    <Viewbox StretchDirection="DownOnly">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Image Margin="0,-5,0,0"
                                Width="34"
                                Height="34"
                                VerticalAlignment="Center"
                                Source="{converters2:ResolveImagePath Path=World.png}" />
                            <TextBlock Margin="0,-5,0,0"
                                
                                VerticalAlignment="Center"
                                       Style="{StaticResource WrapableTextBlock}"
                                       Text="{l:Translate Key={x:Static l:MultistringTags.ALL_SPORTS}}" />
                        </StackPanel>
                    </Viewbox>
                </RadioButton>

                <RadioButton
                    Grid.Column="2"
                    Height="49"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    AutomationProperties.AutomationId="todaysoffer"
                    Command="{Binding TodaysOfferCommand}"
                    GroupName="MatchFilterButtons"
                    IsChecked="False"
                    Style="{StaticResource sportBarRadioButton}">
                    <Viewbox StretchDirection="DownOnly">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Image Margin="0,-5,0,0"
                                Width="34"
                                Height="34"
                                VerticalAlignment="Center"
                                Source="{converters2:ResolveImagePath Path=Today.png}" />
                            <TextBlock Margin="0,-5,0,0"
                                
                                VerticalAlignment="Center"
                                       Style="{StaticResource WrapableTextBlock}"
                                       Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_OFFER_TODAY}}" />
                        </StackPanel>
                    </Viewbox>
                </RadioButton>

                <RadioButton
                    Grid.Column="3"
                    Height="49"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    AutomationProperties.AutomationId="lastminute"
                    Command="{Binding LastMinuteCommand}"
                    GroupName="MatchFilterButtons"
                    IsChecked="False"
                    Style="{StaticResource sportBarRadioButton}">
                    <Viewbox StretchDirection="DownOnly">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Image Margin="0,-5,0,0"
                                Width="34"
                                Height="34"
                                VerticalAlignment="Center"
                                Source="{converters2:ResolveImagePath Path=LastMinute.png}" />
                            <TextBlock Margin="0,-5,0,0"
                               
                                VerticalAlignment="Center"
                                       Style="{StaticResource WrapableTextBlock}"
                                       Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_LASTMINUTE}}" />
                        </StackPanel>
                    </Viewbox>
                </RadioButton>
            </Grid>

            <!--  results buttons  -->
            <Grid
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                Visibility="{Binding ShowResultFilters, Converter={StaticResource myBooleanToVisibilityCollapsedConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15*" />
                    <ColumnDefinition Width="15*" />
                    <ColumnDefinition Width="70*" />
                </Grid.ColumnDefinitions>

                <RadioButton
                    Grid.Column="0"
                    Height="49"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    AutomationProperties.AutomationId="resultstoday"
                    Command="{Binding ResultsTimeCommand}"
                    CommandParameter="0"
                    GroupName="resultsBarlButtons"
                    IsChecked="{Binding TodayResultsChecked}"
                    Style="{StaticResource sportBarRadioButton}">
                    <Viewbox StretchDirection="DownOnly">
                        <TextBlock Style="{StaticResource WrapableTextBlock}"
                                   Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_RESULTS_TODAY}}" />
                    </Viewbox>
                </RadioButton>

                <RadioButton
                    Grid.Column="1"
                    Height="49"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    AutomationProperties.AutomationId="resultstesretday"
                    Command="{Binding ResultsTimeCommand}"
                    CommandParameter="1"
                    GroupName="resultsBarlButtons"
                    Style="{StaticResource sportBarRadioButton}">
                    <Viewbox StretchDirection="DownOnly">
                        <TextBlock Style="{StaticResource WrapableTextBlock}"
                                   Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_RESULTS_YESTERDAY}}" />
                    </Viewbox>
                </RadioButton>

                <UniformGrid Grid.Column="2" Columns="5">
                    <RadioButton
                        Height="49"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="resultsminus2"
                        Command="{Binding ResultsTimeCommand}"
                        CommandParameter="2"
                        GroupName="resultsBarlButtons"
                        Style="{StaticResource sportBarRadioButton}">
                        <Viewbox StretchDirection="DownOnly">
                            <TextBlock Style="{StaticResource WrapableTextBlock}"
                                       Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_RESULTS_MINUS_X_DAYS},
                                                   Args=2}" />
                        </Viewbox>
                    </RadioButton>

                    <RadioButton
                        Height="49"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="resultsminus3"
                        Command="{Binding ResultsTimeCommand}"
                        CommandParameter="3"
                        GroupName="resultsBarlButtons"
                        Style="{StaticResource sportBarRadioButton}">
                        <Viewbox StretchDirection="DownOnly">
                            <TextBlock Style="{StaticResource WrapableTextBlock}"
                                       Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_RESULTS_MINUS_X_DAYS},
                                                   Args=3}" />
                        </Viewbox>
                    </RadioButton>

                    <RadioButton
                        Height="49"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="resultsminus4"
                        Command="{Binding ResultsTimeCommand}"
                        CommandParameter="4"
                        GroupName="resultsBarlButtons"
                        Style="{StaticResource sportBarRadioButton}">
                        <Viewbox StretchDirection="DownOnly">
                            <TextBlock Style="{StaticResource WrapableTextBlock}"
                                       Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_RESULTS_MINUS_X_DAYS},
                                                   Args=4}" />
                        </Viewbox>
                    </RadioButton>

                    <RadioButton
                        Height="49"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="resultsminus5"
                        Command="{Binding ResultsTimeCommand}"
                        CommandParameter="5"
                        GroupName="resultsBarlButtons"
                        Style="{StaticResource sportBarRadioButton}">
                        <Viewbox StretchDirection="DownOnly">
                            <TextBlock Style="{StaticResource WrapableTextBlock}"
                                       Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_RESULTS_MINUS_X_DAYS},
                                                   Args=5}" />
                        </Viewbox>
                    </RadioButton>

                    <RadioButton
                        Height="49"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="resultsminus6"
                        Command="{Binding ResultsTimeCommand}"
                        CommandParameter="6"
                        GroupName="resultsBarlButtons"
                        Style="{StaticResource sportBarRadioButton}">
                        <Viewbox StretchDirection="DownOnly">
                            <TextBlock Style="{StaticResource WrapableTextBlock}"
                                       Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_RESULTS_MINUS_X_DAYS},
                                                   Args=6}" />
                        </Viewbox>
                    </RadioButton>
                </UniformGrid>
            </Grid>
            <!--  EndRegion  -->


            <Button
                Name="buttonNext"
                Grid.Column="3"
                Width="100"
                Height="35"
                AutomationProperties.AutomationId="Forward"
                Command="{Binding NextView}"
                FontSize="20"
                FontWeight="Bold"
                Foreground="#FFC0C0C0"
                Style="{StaticResource buttonNextStyle}"
                Visibility="{Binding VisibilityNextButton}" />
            <!--    -->




            <RadioButton
                Grid.Column="5"
                AutomationProperties.AutomationId="Search"
                Command="{Binding DoSearchCommand}"
                GroupName="headerBtn"
                Style="{StaticResource buttonSearch}"
                Visibility="Visible" />


        </Grid>
        <Separator
            Grid.Row="9"
            Height="10"
            Background="#3D3D3D">
            <Separator.Effect>
                <DropShadowEffect
                    BlurRadius="4"
                    Direction="270"
                    Opacity="0.5"
                    ShadowDepth="4"
                    Color="Black" />
            </Separator.Effect>
        </Separator>
    </Grid>

</UserControl>
