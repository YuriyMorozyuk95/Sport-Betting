<UserControl x:Class="DefaultViews.Views.Mode3x4.FoundUserProfileView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:baseObjects="clr-namespace:BaseObjects;assembly=BaseObjects"
             xmlns:converters="clr-namespace:SportBetting.WPF.Prism.Shared.Converters;assembly=SportBetting.WPF.Prism.Shared"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:l="clr-namespace:TranslationByMarkupExtension;assembly=TranslationByMarkupExtension"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:shared="clr-namespace:SportBetting.WPF.Prism.Shared;assembly=SportBetting.WPF.Prism.Shared"
             xmlns:viewModels2="clr-namespace:ViewModels.ViewModels;assembly=ViewModels"
             d:DataContext="{d:DesignInstance Type=viewModels2:FoundUserProfileViewModel}"
             mc:Ignorable="d">

    <UserControl.Resources>
        <shared:InverseBooleanToVisibilityCollapsedConverter x:Key="myInverseBooleanToVisibilityConverter" />
        <shared:BooleanToVisibilityCollapsedConverter x:Key="myBooleanToVisibilityConverter" />
        <Style x:Key="greenButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="10,0,10,0" />
            <Setter Property="Margin" Value="-1,0,0,0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Height" Value="68" />
            <Setter Property="Width" Value="185" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <DockPanel x:Name="dpnlContent"
                                       Width="{TemplateBinding Width}"
                                       Height="60"
                                       LastChildFill="True">
                                <DockPanel.Background>
                                    <ImageBrush x:Name="imgTopToggleButton" ImageSource="{converters:ResolveImagePath Path=green_button.png}" />
                                </DockPanel.Background>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                            <Canvas x:Name="DisabledCover"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ZIndex="2" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=red_button.png}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="dpnlContent" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=PressButtonDownCenter.png}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="DisabledCover" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{converters:ResolveImagePath Path=Button-pattern.png}" Opacity="50" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <UserControl.Background>
        <ImageBrush AlignmentX="Left"
                    AlignmentY="Top"
                    ImageSource="{converters:ResolveImagePath Path=BackgroundTileNotTransparent.png}"
                    Stretch="None"
                    TileMode="Tile"
                    Viewport="0,0,3,3"
                    ViewportUnits="Absolute" />
    </UserControl.Background>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0"
                    Grid.Column="1"
                    Orientation="Vertical">
            <!--  bind card  -->
            <Button Margin="5"
                    AutomationProperties.AutomationId="BindCard"
                    Command="{Binding BindCardCommand}"
                    IsEnabled="{Binding IsEnabledBindCard}"
                    Style="{StaticResource registrationMediumButton}">
                <Viewbox StretchDirection="DownOnly">
                    <Grid>
                        <TextBlock Style="{StaticResource normalText}"
                                   Text="{l:Translate Key={x:Static l:MultistringTags.BIND_CARD}}"
                                   Visibility="{Binding StationRepository.IsIdCardEnabled,
                                                        Converter={StaticResource myBooleanToVisibilityConverter}}" />
                        <TextBlock Style="{StaticResource normalText}"
                                   Text="{l:Translate Key={x:Static l:MultistringTags.BIND_BARCODECARD}}"
                                   Visibility="{Binding StationRepository.IsIdCardEnabled,
                                                        Converter={StaticResource myInverseBooleanToVisibilityConverter}}" />
                    </Grid>
                </Viewbox>
            </Button>
            <!--  block card  -->
            <Button Margin="5,0,5,5"
                    AutomationProperties.AutomationId="BlockCard"
                    Command="{Binding BlockCardCommand}"
                    IsEnabled="{Binding BlockCardButtonsActive}"
                    Style="{StaticResource registrationMediumButton}">
                <Viewbox StretchDirection="DownOnly">
                    <Grid>
                        <TextBlock Style="{StaticResource normalText}"
                                   Text="{l:Translate Key={x:Static l:MultistringTags.BLOCK_CARD}}"
                                   Visibility="{Binding StationRepository.IsIdCardEnabled,
                                                        Converter={StaticResource myBooleanToVisibilityConverter}}" />
                        <TextBlock Style="{StaticResource normalText}"
                                   Text="{l:Translate Key={x:Static l:MultistringTags.BLOCK_BARCODECARD}}"
                                   Visibility="{Binding StationRepository.IsIdCardEnabled,
                                                        Converter={StaticResource myInverseBooleanToVisibilityConverter}}" />
                    </Grid>
                </Viewbox>
            </Button>
            <!--  new PIN  -->
            <Button Margin="5,0,5,5"
                    AutomationProperties.AutomationId="NewPin"
                    Command="{Binding NewPINCommand}"
                    IsEnabled="{Binding IsCardButtonsActive}"
                    Style="{StaticResource registrationMediumButton}">
                <Viewbox StretchDirection="DownOnly">
                    <Grid>
                        <TextBlock Style="{StaticResource normalText}"
                                   Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_GENERATE_NEW_PIN}}"
                                   Visibility="{Binding StationRepository.IsIdCardEnabled,
                                                        Converter={StaticResource myBooleanToVisibilityConverter}}" />
                        <TextBlock Style="{StaticResource normalText}"
                                   Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_GENERATE_NEW_BARCODE_PIN}}"
                                   Visibility="{Binding StationRepository.IsIdCardEnabled,
                                                        Converter={StaticResource myInverseBooleanToVisibilityConverter}}" />
                    </Grid>
                </Viewbox>
            </Button>

            <!--  history  -->
            <Button Margin="5,0,5,5"
                    AutomationProperties.AutomationId="History"
                    Command="{Binding HistoryCommand}"
                    Style="{StaticResource registrationMediumButton}"
                    Visibility="{Binding StationRepository.IsTestMode,
                                         Converter={StaticResource myInverseBooleanToVisibilityConverter}}">
                <Viewbox StretchDirection="DownOnly">
                    <TextBlock Style="{StaticResource normalText}" Text="{l:Translate Key={x:Static l:MultistringTags.TERMINAL_HISTORY_BUTTON}}" />
                </Viewbox>
            </Button>
            <!--  activate  -->
            <ToggleButton Margin="5,0,5,5"
                          AutomationProperties.AutomationId="ActivateBlock"
                          Command="{Binding ActivateCommand}"
                          Focusable="False"
                          IsChecked="{Binding Activate}"
                          IsEnabled="{Binding EnableActivationButton}"
                          Style="{StaticResource greenButton}"
                          Visibility="{Binding StationRepository.IsTestMode,
                                               Converter={StaticResource myInverseBooleanToVisibilityConverter}}">
                <Viewbox StretchDirection="DownOnly">
                    <TextBlock Style="{StaticResource normalText}" Text="{Binding ActivateText}" />
                </Viewbox>
            </ToggleButton>
            <!--  change password  -->
            <Button Margin="5,0,5,5"
                    AutomationProperties.AutomationId="ChangePassword"
                    Command="{Binding ChangePasswordCommand}"
                    Style="{StaticResource registrationMediumButton}"
                    Visibility="{Binding StationRepository.IsTestMode,
                                         Converter={StaticResource myInverseBooleanToVisibilityConverter}}">
                <Viewbox StretchDirection="DownOnly">
                    <TextBlock Style="{StaticResource normalText}" Text="{l:Translate Key={x:Static l:MultistringTags.SHOP_FORM_CHANGE_PASSWORD}}" />
                </Viewbox>
            </Button>
        </StackPanel>

        <!--  user profile  -->
        <DockPanel Grid.Row="0"
                   Grid.Column="0"
                   HorizontalAlignment="Stretch">
            <baseObjects:MyContentRegion baseObjects:MyRegionManager.RegionName="UserManagementProfileRegion" />
        </DockPanel>
    </Grid>
</UserControl>

